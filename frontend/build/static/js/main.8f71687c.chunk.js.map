{"version":3,"sources":["constants/AppConstants.js","services/FirebaseService.js","router/history.js","screens/Navbar/Navbar.js","constants/uri.js","services/WebService.js","services/AxiosService.js","screens/Home/Home.js","screens/Dashboard/Dashboard.js","screens/MyProfile/MyProfile.js","screens/MyOrganization/MyOrganization.js","screens/CreateHackathon/CreateHackathon.js","screens/Payment/Payment.js","screens/HackathonDetail/HackathonDetail.js","screens/MyJudgement/MyJudgement.js","screens/LeaderBoard/LeaderBoard.js","screens/FinancialReport/FinancialReport.js","router/Main.js","App.js","serviceWorker.js","index.js"],"names":["AppConstants","USER_ROLE_HACKER","USER_ROLE_ADMIN","AUTH_TOKEN","USER_FIREBASE_DETAILS","USER_DETAILS","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","Object","classCallCheck","this","app","initializeApp","auth","googleProvider","GoogleAuthProvider","instance","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","signInWithPopup","history","createBrowserHistory","Navbar","props","_this","possibleConstructorReturn","getPrototypeOf","call","user","JSON","parse","localStorage","getItem","react_default","a","createElement","className","react_router_dom","to","renderMenu","react","admin","class","href","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","logout","bind","getInstance","then","clear","push","Component","URI","BASE_URL","LOOKUP_SCREEN_NAME","SIGNUP","GET_PROFILE","UPDATE_PROFILE","SEARCH_ORGANIZATION","CREATE_ORGANIZATION","GET_LIST_ORGANIZATION","RESPOND_REQUEST","CREATE_UPDATE_HACKATHON","FETCH_PRICE","LIST_HACKATHON","DETAIL_HACKATHON","MAKE_PAYMENT","REGISTER_HACKATHON","SUBMIT_HACKATHON","SAVE_GRADES","GET_LEADERBOARD","GET_FINANCIAL_REPORT","ADD_EXPENSE","WebService","screenName","success","failure","getCall","details","postCall","eventName","AxiosService","api","axios","create","baseURL","timeout","headers","Accept","Content-Type","path","token","Authorization","withCredentials","post","response","handleResponse","console","error","_context","t0","handleError","crossDomain","get","_context2","log","delete","_context3","data","status","message","Home","onChange","event","_this$setState","state","loginFailed","setState","defineProperty","target","name","value","username","isLoginMode","errorMessage","handleLoginSubmit","assertThisInitialized","handleSignupSubmit","handleGoogleLogin","_this2","redirectVar","react_router","screens_Navbar_Navbar","renderFailedLogin","renderLogin","renderSignup","onSubmit","type","placeholder","required","minLength","id","viewBox","xmlns","d","fill","_this3","signInWithGoogle","socialAuthUser","additionalUserInfo","isNewUser","sendEmailVerification","signUp","displayName","alert","emailVerified","currentUser","getIdToken","setItem","stringify","getProfile","catch","_this4","preventDefault","_this$state","screenNameLookup","authUser","_this5","_this$state2","login","Modal","require","Dashboard","modalIsOpen","hackathons","isAckPositive","ackMessage","getHackathon","results","renderAcknowledgement","renderHackathon","renderCreateModal","views","length","map","hack","index","onHackClick","description","Date","startDate","toDateString","endDate","teamMinSize","teamMaxSize","registrationFee","style","textAlign","finalized","getLeaderBoard","stopPropagation","openModal","getFinancialReport","fetchFinancialReport","pathname","search","req","title","amount","addExpense","closeModal","show","onHide","addExpenses","Header","closeButton","Title","expenseEventName","Body","address","Footer","Dismiss","MyProfile","userProfile","assign","organization","isFormDirty","organizationList","displayOrganization","businessTitle","aboutMe","portraitUrl","searchOrganization","organizationNames","handleSubmit","disabled","rows","Autocomplete_default","wrapperStyle","width","inputProps","getItemValue","item","items","renderItem","isHighlighted","background","padding","renderInput","organizationApprovalStatus","onSelect","updateProfile","MyOrganization","myOrganizations","getOrganizations","getOrganizationList","renderOrganizations","org","Collapsible_default","trigger","renderRequest","membershipRequest","requests","request","pReq","isApproved","nReq","respondRequest","MyOrganization_Modal","createOrg","createOrganization","_this6","CreateHackathon","_this$setState2","checked","mode","judges","sponsors","discount","open","failedCreation","location","getHackathonDetails","getHackathonDetail","toISOString","join","createUpdateHackathon","getTime","split","str","trim","renderFailed","for","substr","queryString","Payment","originalPrice","discountedPrice","quotation","makePayment","window","query","fetchEventPrice","discountPercent","objectSpread","parseInt","HackathonDetail","url","teamName","teamMember","teams","team","keys","submission","renderDetails","renderEvaluation","renderDetailsInput","splice","onSubmitScore","key","onChangeScore","parseFloat","score","min","max","step","judge","saveHackathonGrade","aria-hidden","renderRegistration","allPaid","renderSubmission","isEnable","arguments","undefined","submitHackathon","registeration","_this7","temp","teamMembers","registerHackathon","MyJudgement","LeaderBoard","result","fetchLeaderBoard","renderLeaderBoard","rank","backgroundColor","fontWeight","fontSize","marginRight","FinancialReport","borderRight","renderTeams","renderExpense","revenueFromRegistration","revenueFromSponsor","totalExpenses","amountUnpaid","profit","display","justifyContent","alignItems","color","renderTeamMeberPayment","expenses","expense","formatDate","timeOfExpense","member","paid","amountPaid","timeOfPayment","date","hours","getHours","minutes","getMinutes","ampm","strTime","getMonth","getDate","getFullYear","Main","exact","component","App","router_Main","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"shBAOeA,UAPM,CACjBC,iBAAmB,SACnBC,gBAAiB,QACjBC,WAAW,kBACXC,sBAAsB,wBACtBC,aAAa,kDCFXC,UAAS,CACbC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,iBAGAC,aAcnB,SAAAA,IAAeC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACbI,IAAIC,cAAcZ,GAClBU,KAAKG,KAAOF,IAAIE,OAChBH,KAAKI,eAAiB,IAAIH,IAAIE,KAAKE,kFANnC,OAHyB,MAArBR,EAASS,WACXT,EAASS,SAAW,IAAIT,GAEnBG,KAAKM,yDAWPC,EAAOC,GACZ,OAAOR,KAAKG,KAAKM,+BAA+BF,EAAOC,iCAGnDD,EAAOC,GACX,OAAOR,KAAKG,KAAKO,2BAA2BH,EAAOC,qCAInD,OAAOR,KAAKG,KAAKQ,qDAIjB,OAAOX,KAAKG,KAAKS,gBAAgBZ,KAAKI,yBAnCrBP,EAEZS,SAAW,iBCZPO,EAAUC,cCoERC,cA7DX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAe,IACfE,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAAiB,GAAAK,KAAApB,KAAMgB,KACDK,KAAOC,KAAKC,MAAMC,aAAaC,QAAQzC,EAAaK,eAF1C4B,wEAMf,OACIS,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,cAAT,IAAuBL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,eAE3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACV7B,KAAKgC,sDAQ1B,GAAIR,aAAaC,QAAQzC,EAAaG,YAClC,OACIuC,EAAAC,EAAAC,cAACK,EAAA,SAAD,KACMjC,KAAKqB,KAAKa,MAIN,KAHHR,EAAAC,EAAAC,cAAA,OAAKO,MAAM,sBACNT,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,gBAAeL,EAAAC,EAAAC,cAAA,KAAGO,MAAM,YAAT,mBAIhCT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,sBACPT,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,mBAAkBL,EAAAC,EAAAC,cAAA,KAAGO,MAAM,YAAT,sBAE/BT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,gCACPT,EAAAC,EAAAC,cAAA,KAAGO,MAAM,2BAA2BC,KAAK,IAAIC,KAAK,SAASC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,QACjHd,EAAAC,EAAAC,cAAA,QAAMO,MAAM,8BAEhBT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,gBAAgBM,kBAAgB,0BACvCf,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,cAAaL,EAAAC,EAAAC,cAAA,QAAMO,MAAM,iBAAZ,eACtBT,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,gBAAgBO,QAAS1C,KAAK2C,OAAOC,KAAK5C,OAAtD,8CASpBH,EAASgD,cAAclC,UAAUmC,KAAK,WAClCtB,aAAauB,QACblC,EAAQmC,KAAK,cAtDJC,wDCmBNC,EA1BH,CAKRC,SAAU,iEACVC,mBAAoB,oBACpBC,OAAQ,UACRC,YAAa,cACbC,eAAgB,iBAChBC,oBAAqB,uBACrBC,oBAAqB,sBACrBC,sBAAuB,2BACvBC,gBAAiB,6BACjBC,wBAAyB,yBACzBC,YAAa,cACbC,eAAgB,iBAChBC,iBAAkB,mBAClBC,aAAc,eACdC,mBAAoB,qBACpBC,iBAAkB,cAClBC,YAAY,SACZC,gBAAiB,eACjBC,qBAAqB,mBACrBC,YAAY,eCpBKC,cAIjB,SAAAA,IAAe,OAAAzE,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,GAAAzE,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAAyE,GAAAnD,KAAApB,qFAoBEwE,EAAYC,EAASC,GAClC1E,KAAK2E,QAAQzB,EAAIE,mBAAqB,gBAAkBoB,EAAYC,EAASC,GAAS,kCASnFE,EAASH,EAASC,GACrB1E,KAAK6E,SAAS3B,EAAIG,OAAQuB,EAASH,EAASC,GAAS,sCAS9CD,EAASC,GAChB,IAAIrD,EAAOC,KAAKC,MAAMC,aAAaC,QAAQzC,EAAaI,wBACxDY,KAAK2E,QAAQzB,EAAII,YAAc,WAAajC,EAAKd,MAAOkE,EAASC,GAAS,wCASjErC,EAAMoC,EAASC,GACxB,IAAIrD,EAAOC,KAAKC,MAAMC,aAAaC,QAAQzC,EAAaI,wBACxDY,KAAK2E,QAAQzB,EAAIY,eAAiB,WAAazC,EAAKd,MAAQ,SAAW8B,EAAMoC,EAASC,GAAS,8CAShFI,EAAWzC,EAAMoC,EAASC,GACzC,IAAIrD,EAAOC,KAAKC,MAAMC,aAAaC,QAAQzC,EAAaI,wBACxDY,KAAK2E,QAAQzB,EAAIa,iBAAmB,WAAa1C,EAAKd,MAAQ,SAAW8B,EAAO,cAAgByC,EAAWL,EAASC,GAAS,+CAS7GD,EAASC,GACzB,IAAIrD,EAAOC,KAAKC,MAAMC,aAAaC,QAAQzC,EAAaI,wBACxDY,KAAK2E,QAAQzB,EAAIQ,sBAAwB,WAAarC,EAAKd,MAAOkE,EAASC,GAAS,8CASrED,EAASC,GACxB1E,KAAK2E,QAAQzB,EAAIM,oBAAsB,UAAgBiB,EAASC,GAAS,2CAS7DnE,EAAOuE,EAAWL,EAASC,GACvC1E,KAAK2E,QAAQzB,EAAIW,YAAc,WAAatD,EAAQ,cAAgBuE,EAAWL,EAASC,GAAS,yCASvFE,EAASH,EAASC,GAC5B1E,KAAK6E,SAAS3B,EAAIK,eAAgBqB,EAASH,EAASC,GAAS,8CAS9CE,EAASH,EAASC,GACjC1E,KAAK6E,SAAS3B,EAAIO,oBAAqBmB,EAASH,EAASC,GAAS,0CASvDE,EAASH,EAASC,GAC7B1E,KAAK6E,SAAS3B,EAAIS,gBAAiBiB,EAASH,EAASC,GAAS,iDAS5CE,EAASH,EAASC,GACpC1E,KAAK6E,SAAS3B,EAAIU,wBAAyBgB,EAASH,EAASC,GAAS,uCAS9DE,EAASH,EAASC,GAC1B1E,KAAK6E,SAAS3B,EAAIc,aAAcY,EAASH,EAASC,GAAS,6CAS7CE,EAASH,EAASC,GAChC1E,KAAK6E,SAAS3B,EAAIe,mBAAoBW,EAASH,EAASC,GAAS,2CASrDE,EAASH,EAASC,GAC9B1E,KAAK6E,SAAS3B,EAAIgB,iBAAkBU,EAASH,EAASC,GAAS,8CAGhDE,EAASH,EAASC,GACjC1E,KAAK6E,SAAS3B,EAAIiB,YAAaS,EAASH,EAASC,GAAS,sCAGnDE,EAASH,EAASC,GACzB1E,KAAK6E,SAAS3B,EAAIoB,YAAaM,EAASH,EAASC,GAAS,4CAG7CI,EAAWL,EAASC,GACjC1E,KAAK2E,QAAQzB,EAAIkB,gBAAkB,cAAgBU,EAAWL,EAASC,GAAS,gDAG/DnE,EAAOuE,EAAWL,EAASC,GAC5C1E,KAAK2E,QAAQzB,EAAImB,qBAAuB,UAAY9D,EAAQ,cAAgBuE,EAAWL,EAASC,GAAS,2CA1KzG,OAH2B,MAAvBH,EAAWjE,WACXiE,EAAWjE,SAAW,IAAIiE,GAEvBvE,KAAKM,2BCdhB,SAAAyE,IAAejF,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,GAAA/E,KAEfgF,IAAMC,IAAMC,OAAO,CACfC,QAASjC,EAAIC,SACbiC,QAAS,IACTC,QAAS,CACLC,OAAU,mBACVC,eAAgB,mHAITC,EAAMZ,EAASH,EAASC,iIAG3Be,EAAQjE,aAAaC,QAAQzC,EAAaG,YAC9CG,EAAS,CAAE+F,QAAS,CAAEK,cAAkBD,GAAgB,IAAOE,iBAAiB,IAGhFrG,EAAS,CAAEqG,iBAAiB,qBAGL3F,KAAKgF,IAAIY,KAAKJ,EAAMZ,EAAStF,UAA9CuG,SACNpB,EAAQzE,KAAK8F,eAAeD,oDAG5BE,QAAQC,MAARC,EAAAC,IACAxB,EAAQ1E,KAAKmG,YAALF,EAAAC,+LAIFV,EAAMf,EAASC,iIAGjBe,EAAQjE,aAAaC,QAAQzC,EAAaG,YAC9CG,EAAS,CAAE+F,QAAS,CAAEK,cAAkBD,GAAgB,IAAOE,iBAAiB,IAGhFrG,EAAS,CAAEqG,iBAAiB,EAAMS,aAAa,qBAGxBpG,KAAKgF,IAAIqB,IAAIb,EAAMlG,UAApCuG,SACNpB,EAAQzE,KAAK8F,eAAeD,oDAG5BE,QAAQC,MAARM,EAAAJ,IACAxB,EAAQ1E,KAAKmG,YAALG,EAAAJ,gMAICV,sGAAMZ,iCAAU,KAAMH,yBAASC,0DAGpCe,EAAQjE,aAAaC,QAAQzC,EAAaG,YAC9CG,EAAS,CAAE+F,QAAS,CAAEK,cAAkBD,GAAgB,IAAOE,iBAAiB,IAGhFrG,EAAS,CAAEqG,iBAAiB,GAEhCI,QAAQQ,IAAIjH,qBAEeU,KAAKgF,IAAIwB,OAAOhB,EAAMZ,EAAStF,UAAhDuG,SACNpB,EAAQzE,KAAK8F,eAAeD,sDAG5BE,QAAQC,MAARS,EAAAP,IACAxB,EAAQ1E,KAAKmG,YAALM,EAAAP,yJAIDL,GACX,OAAIA,EAASa,KACFb,EAASa,KAEbb,sCAICG,GAKR,OAJIA,EAAMH,UAAsC,MAA1BG,EAAMH,SAASc,SACjCnF,aAAauB,QACblC,EAAQmC,KAAK,MAEbgD,EAAMH,UACgBG,EAAMH,SAASa,MAAQV,EAAMH,SAASa,KAAKE,SAG9DZ,EAAMY,kBDvFArC,EAEVjE,SAAW,SEGDuG,cACjB,SAAAA,EAAY7F,GAAO,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAA6G,IACf5F,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAA+G,GAAAzF,KAAApB,KAAMgB,KAaV8F,SAAW,SAACC,GACoB,IAAAC,EAAxB/F,EAAKgG,MAAMC,YACXjG,EAAKkG,UAALH,EAAA,GAAAlH,OAAAsH,EAAA,EAAAtH,CAAAkH,EAAiBD,EAAMM,OAAOC,KAAOP,EAAMM,OAAOE,OAAlDzH,OAAAsH,EAAA,EAAAtH,CAAAkH,EAAA,eAAsE,GAAtEA,IAGA/F,EAAKkG,SAALrH,OAAAsH,EAAA,EAAAtH,CAAA,GAAiBiH,EAAMM,OAAOC,KAAOP,EAAMM,OAAOE,SAjBtDtG,EAAKgG,MAAQ,CACTzG,SAAU,GACVgH,SAAU,GACVC,aAAa,EACbP,aAAa,EACbQ,aAAc,MAElBzG,EAAK0G,kBAAoB1G,EAAK0G,kBAAkB/E,KAAvB9C,OAAA8H,EAAA,EAAA9H,CAAAmB,IACzBA,EAAK4G,mBAAqB5G,EAAK4G,mBAAmBjF,KAAxB9C,OAAA8H,EAAA,EAAA9H,CAAAmB,IAC1BA,EAAK6G,kBAAoB7G,EAAK6G,kBAAkBlF,KAAvB9C,OAAA8H,EAAA,EAAA9H,CAAAmB,IAXVA,mFAwBf,GAAIjB,KAAKiH,MAAMC,YACX,OACIxF,EAAAC,EAAAC,cAAA,OAAKO,MAAM,qBAAqBE,KAAK,SAChCrC,KAAKiH,MAAMS,+CASnB,IAAAK,EAAA/H,KACDgI,EAAc,KAIlB,OAHIxG,aAAaC,QAAQzC,EAAaG,cAClC6I,EAActG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAUlG,GAAG,gBAG3BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVmG,EACDtG,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACV7B,KAAKmI,oBACNzG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,MAAIc,QAAS,WAAQqF,EAAKZ,SAAS,CAAEM,aAAcM,EAAKd,MAAMQ,gBAAmBzH,KAAKiH,MAAMQ,YAAc,kBAAoB,2BAA9H,IAA0J/F,EAAAC,EAAAC,cAAA,SAAI5B,KAAKiH,MAAMQ,YAAc,SAAW,UAClM/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAe7B,KAAKiH,MAAMQ,YAAc,gBAAkB,WAE7EzH,KAAKiH,MAAMQ,YAAczH,KAAKoI,cAAgBpI,KAAKqI,yDASxE,OACI3G,EAAAC,EAAAC,cAACK,EAAA,SAAD,KACIP,EAAAC,EAAAC,cAAA,QAAM0G,SAAUtI,KAAK2H,mBACjBjG,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,QAAQpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,WAAWkB,YAAY,gBAAgBC,UAAQ,KAE1I/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,WAAWpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,WAAWkB,YAAY,WAAWE,UAAU,IAAID,UAAQ,KAEtJ/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cAAaT,EAAAC,EAAAC,cAAA,KAAGQ,KAAK,KAAR,sBACxBV,EAAAC,EAAAC,cAAA,OAAKO,MAAM,iCACPT,EAAAC,EAAAC,cAAA,SAAOO,MAAM,mBAAmBoG,KAAK,WAAWI,GAAG,aAAapB,MAAM,KAD1E,wBAGA7F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASpG,MAAM,oCAA5B,UAEJT,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASpG,MAAM,gBAAgBO,QAAS1C,KAAK8H,mBACtDpG,EAAAC,EAAAC,cAAA,QAAMO,MAAM,uBACRT,EAAAC,EAAAC,cAAA,OAAKgH,QAAQ,cAAcC,MAAM,8BAA6BnH,EAAAC,EAAAC,cAAA,QAAMkH,EAAE,uRAAuRH,GAAG,QAAQI,KAAK,YAAYrH,EAAAC,EAAAC,cAAA,QAAMkH,EAAE,sJAAsJH,GAAG,QAAQI,KAAK,YAAYrH,EAAAC,EAAAC,cAAA,QAAMkH,EAAE,iJAAiJH,GAAG,QAAQI,KAAK,YAAYrH,EAAAC,EAAAC,cAAA,QAAMkH,EAAE,+QAA+QC,KAAK,cAExgCrH,EAAAC,EAAAC,cAAA,QAAMO,MAAM,eAAZ,gEAOZ,OACIT,EAAAC,EAAAC,cAAA,QAAM0G,SAAUtI,KAAK6H,oBACjBnG,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,OAAOkB,YAAY,OAAOC,UAAQ,KAE5H/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,aAAakB,YAAY,cAAcC,UAAQ,KAEzI/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,QAAQpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,QAAQkB,YAAY,gBAAgBC,UAAQ,KAEvI/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,WAAWpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,WAAWkB,YAAY,WAAWC,UAAQ,EAACC,UAAU,OAEnJhH,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASpG,MAAM,oCAA5B,2DAMQ,IAAA6G,EAAAhJ,KAChBH,EAASgD,cAAcoG,mBAAmBnG,KAAK,SAAAoG,GAC3CnD,QAAQQ,IAAI2C,GACRA,EAAeC,mBAAmBC,WAClCF,EAAe7H,KAAKgI,wBAEpB9E,EAAW1B,cAAcyG,OAAO,CAAC/I,MAAM2I,EAAe7H,KAAKd,MAAOiE,WAAY0E,EAAe7H,KAAKd,MAAO+G,KAAK4B,EAAe7H,KAAKkI,aAAc,SAAC1D,GAC7IE,QAAQQ,IAAIV,GACTA,EAASpB,SACR+E,MAAM,8DAEX,SAACxD,GACAD,QAAQQ,IAAIP,GACZgD,EAAK7B,SAAS,CAAEO,aAAc1B,EAAMY,QAASM,aAAa,OAIxDgC,EAAe7H,KAAKoI,cAO1B5J,EAASgD,cAAc1C,KAAKuJ,YAAYC,aAAa7G,KAAK,SAAC2C,GACvDjE,aAAaoI,QAAQ5K,EAAaG,WAAYsG,GAC9CjE,aAAaoI,QAAQ5K,EAAaI,sBAAuBkC,KAAKuI,UAAUX,EAAe7H,OACvFkD,EAAW1B,cAAciH,WAAW,SAACjE,GACjCE,QAAQQ,IAAIV,GACTA,EAASpB,SACRjD,aAAaoI,QAAQ5K,EAAaK,aAAciC,KAAKuI,UAAUhE,IAC/DhF,EAAQmC,KAAK,eAGbgG,EAAK7B,SAAS,CAAEO,aAAc7B,EAASe,QAASM,aAAa,KAEnE,SAAClB,GACCD,QAAQQ,IAAIP,GACZgD,EAAK7B,SAAS,CAAEO,aAAc1B,EAAMY,QAASM,aAAa,QApBlE8B,EAAK7B,SAAS,CAAEO,aAAc,6BAA8BR,aAAa,MAwB9E6C,MAAM,SAAA/D,GAELD,QAAQQ,IAAIP,GACZgD,EAAK7B,SAAS,CAAEO,aAAc1B,EAAMY,QAASM,aAAa,iDAI/CH,GAAO,IAAAiD,EAAAhK,KACtB+G,EAAMkD,iBADgB,IAAAC,EAEwBlK,KAAKiH,MAA3C1G,EAFc2J,EAEd3J,MAAOC,EAFO0J,EAEP1J,SAAUgE,EAFH0F,EAEG1F,WAAY8C,EAFf4C,EAEe5C,KACrC/C,EAAW1B,cAAcsH,iBAAiB3F,EAAY,SAACqB,GAC9CA,EAASpB,QAqBVuF,EAAK7C,SAAS,CAAEO,aAAc7B,EAASe,QAASM,aAAa,IApB7DrH,EAASgD,cAAcyG,OAAO/I,EAAOC,GAAUsC,KAAK,SAAAsH,GAChDrE,QAAQQ,IAAI6D,GACRA,EAASjB,mBAAmBC,YAC5BgB,EAAS/I,KAAKgI,wBACd9E,EAAW1B,cAAcyG,OAAO,CAAC/I,QAAOiE,aAAY8C,QAAO,SAACzB,GACxDE,QAAQQ,IAAIV,GACTA,EAASpB,SACR+E,MAAM,8DAEX,SAACxD,GACAD,QAAQQ,IAAIP,GACZgE,EAAK7C,SAAS,CAAEO,aAAc1B,EAAMY,QAASM,aAAa,SAGnE6C,MAAM,SAAA/D,GACLD,QAAQQ,IAAIP,GACZgE,EAAK7C,SAAS,CAAEO,aAAc1B,EAAMY,QAASM,aAAa,OAMnE,SAAClB,GACAD,QAAQQ,IAAIP,+CAIFe,GAAO,IAAAsD,EAAArK,KACrB+G,EAAMkD,iBADe,IAAAK,EAEUtK,KAAKiH,MAA5BO,EAFa8C,EAEb9C,SAAUhH,EAFG8J,EAEH9J,SAClBX,EAASgD,cAAc0H,MAAM/C,EAAUhH,GAAUsC,KAAK,SAAAsH,GAClDrE,QAAQQ,IAAI,SACP6D,EAAS/I,KAAKoI,cAIf5J,EAASgD,cAAc1C,KAAKuJ,YAAYC,aAAa7G,KAAK,SAAC2C,GACvDjE,aAAaoI,QAAQ5K,EAAaG,WAAYsG,GAC9CjE,aAAaoI,QAAQ5K,EAAaI,sBAAuBkC,KAAKuI,UAAUO,EAAS/I,OACjFkD,EAAW1B,cAAciH,WAAW,SAACjE,GAC9BA,EAASpB,SACRsB,QAAQQ,IAAIV,GACZrE,aAAaoI,QAAQ5K,EAAaK,aAAciC,KAAKuI,UAAUhE,IAC/DhF,EAAQmC,KAAK,eAGbqH,EAAKlD,SAAS,CAAEO,aAAc7B,EAASe,QAASM,aAAa,KAEnE,SAAClB,GACCqE,EAAKlD,SAAS,CAAEO,aAAc1B,EAAMY,QAASM,aAAa,QAhBlEmD,EAAKlD,SAAS,CAAEO,aAAc,6BAA8BR,aAAa,MAoB9E6C,MAAM,SAAA/D,GACLD,QAAQQ,IAAIP,GACZqE,EAAKlD,SAAS,CAAEO,aAAc1B,EAAMY,QAASM,aAAa,aA5NpCjE,aCF9BuH,UAAQC,EAAQ,KAECC,cAEjB,SAAAA,EAAY1J,GAAO,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAA0K,IACfzJ,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAA4K,GAAAtJ,KAAApB,KAAMgB,KA2KV8F,SAAW,SAACC,GACR9F,EAAKkG,SAALrH,OAAAsH,EAAA,EAAAtH,CAAA,GAAiBiH,EAAMM,OAAOC,KAAOP,EAAMM,OAAOE,SA3KlDtG,EAAKgG,MAAQ,CACT0D,aAAa,EACbC,WAAY,GACZC,cAAe,KACfC,WAAY,KACZhG,UAAW,MAEf7D,EAAKI,KAAOC,KAAKC,MAAMC,aAAaC,QAAQzC,EAAaK,eACzD0G,QAAQQ,IAAItF,EAAKI,MAVFJ,mFAefjB,KAAK+K,aAAa/K,KAAKqB,KAAKa,MAAQ,QAAU,+CAGrCG,GAAM,IAAA0F,EAAA/H,KACfuE,EAAW1B,cAAckI,aAAa1I,EAAM,SAACwD,GACzCE,QAAQQ,IAAIV,GACRA,EAASpB,SACTsD,EAAKZ,SAAS,CAAEyD,WAAY/E,EAASmF,WAE1C,SAAChF,GACAD,QAAQQ,IAAIP,GACZ+B,EAAKZ,SAAS,CAAE0D,eAAe,EAAOC,WAAY9E,sDAKtD,GAAIhG,KAAKiH,MAAM6D,WACX,OACIpJ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,QAAQN,UAAW7B,KAAKiH,MAAM4D,cAAgB,gBAAkB,eAAgBxI,KAAK,SAC3FrC,KAAKiH,MAAM6D,6CAQxB,IAAI9C,EAAc,KAIlB,OAHKxG,aAAaC,QAAQzC,EAAaG,cACnC6I,EAActG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAUlG,GAAG,OAG3BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVmG,EACDtG,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACV7B,KAAKiL,wBAEFjL,KAAKqB,KAAKa,MACNR,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,oBAAmBL,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASpG,MAAM,uBACpDT,EAAAC,EAAAC,cAAA,QAAMO,MAAM,6BADY,sBAI1B,MAGdT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV7B,KAAKkL,mBAETlL,KAAKmL,+DAKA,IAAAnC,EAAAhJ,KACVoL,EAAQ,GACZ,OAAoC,GAAhCpL,KAAKiH,MAAM2D,WAAWS,OAElB3J,EAAAC,EAAAC,cAAA,sCAIJ5B,KAAKiH,MAAM2D,WAAWU,IAAI,SAACC,EAAMC,GAC7BJ,EAAMpI,KACFtB,EAAAC,EAAAC,cAAA,OAAKO,MAAM,uCAAuCO,QAAS,WAAQsG,EAAKyC,YAAYF,EAAKzG,aACrFpD,EAAAC,EAAAC,cAAA,OAAKO,MAAM,aACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,OACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,iDACPT,EAAAC,EAAAC,cAAA,MAAIO,MAAM,cAAcoJ,EAAKzG,WAC7BpD,EAAAC,EAAAC,cAAA,KAAGO,MAAM,8CAA8CoJ,EAAKG,cAEhEhK,EAAAC,EAAAC,cAAA,OAAKO,MAAM,iCACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,oBAAZ,eAAkD,IAAIwJ,KAAKJ,EAAKK,WAAWC,gBAC9EnK,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,oBAAZ,aAAgD,IAAIwJ,KAAKJ,EAAKO,SAASD,gBAC1EnK,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,oBAAZ,eAAkDoJ,EAAKQ,YAAc,OAASR,EAAKS,YAAc,YACpGtK,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,oBAAZ,uBAA0DoJ,EAAKU,kBAEtEvK,EAAAC,EAAAC,cAAA,OAAKO,MAAM,WAAW+J,MAAO,CAAEC,UAAW,WAElCZ,EAAKa,UACD1K,EAAAC,EAAAC,cAACK,EAAA,SAAD,KACIP,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASpG,MAAM,eAAeO,QAAS,SAACqE,GAAYiC,EAAKqD,eAAed,EAAKzG,WAAYiC,EAAMuF,oBACxG5K,EAAAC,EAAAC,cAAA,QAAMO,MAAM,+BAAZ,MADJ,gBAGAT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAEF,KAGNoH,EAAK3H,KAAKa,QAAUqJ,EAAKa,UACrB1K,EAAAC,EAAAC,cAACK,EAAA,SAAD,KACIP,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASpG,MAAM,eAAeO,QAAS,SAACqE,GAAYiC,EAAKuD,UAAUhB,EAAKzG,WAAYiC,EAAMuF,oBACnG5K,EAAAC,EAAAC,cAAA,QAAMO,MAAM,2BAAZ,MADJ,iBAGAT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAEF,KAGNoH,EAAK3H,KAAKa,MACNR,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASpG,MAAM,eAAeO,QAAS,SAACqE,GAAYiC,EAAKwD,mBAAmBjB,EAAKzG,WAAYiC,EAAMuF,oBAC5G5K,EAAAC,EAAAC,cAAA,QAAMO,MAAM,4BAAZ,MADJ,qBAGE,YAQ3BiJ,8CAIItG,GAAW,IAAAkF,EAAAhK,KAC1BuE,EAAW1B,cAAc4J,qBAAqBzM,KAAKqB,KAAKd,MAAOuE,EAAW,SAACe,GACvEE,QAAQQ,IAAIV,GACRA,EACAhF,EAAQmC,KAAK,mBAAoB,CAAE4B,QAASiB,IAG5CmE,EAAK7C,SAAS,CAAE0D,eAAe,EAAOC,WAAYjF,KAEvD,SAACG,GACAD,QAAQQ,IAAIP,GACZgE,EAAK7C,SAAS,CAAE0D,eAAe,EAAOC,WAAY9E,6CAI3ClB,GACXjE,EAAQmC,KAAK,CACT0J,SAAU,eACVC,OAAQ,cAAgB7H,wCAIpBA,GACJ9E,KAAKqB,KAAKa,MACVrB,EAAQmC,KAAK,mBAAoB,CAAE8B,UAAWA,IAG9CjE,EAAQmC,KAAK,UAAW,CAAE8B,UAAWA,EAAWzC,KAAM,6CAIpDyC,GACN9E,KAAKmH,SAAS,CAAEwD,aAAa,EAAM7F,mDAInC9E,KAAKmH,SAAS,CAAEwD,aAAa,wCAQrB5D,GAAO,IAAAsD,EAAArK,KACf+G,EAAMkD,iBADS,IAAAC,EAEiClK,KAAKiH,MACjD2F,EAAM,CAAE9H,UAHGoF,EAETpF,UACiB+H,MAHR3C,EAEE2C,MACanB,YAHfxB,EAESwB,YACmBoB,OAH5B5C,EAEsB4C,QAErC/G,QAAQQ,IAAIqG,GACZrI,EAAW1B,cAAckK,WAAWH,EAAK,SAAC/G,GAClCA,EAASpB,QACT4F,EAAKlD,SAAS,CAAE0D,eAAe,EAAMC,WAAYjF,EAASe,UAC1DyD,EAAK2C,cAMV,SAAChH,GACAD,QAAQQ,IAAIP,GACZqE,EAAKlD,SAAS,CAAE0D,eAAe,EAAOC,WAAY9E,IAClDqE,EAAK2C,yDAIKlI,GACd,OACIpD,EAAAC,EAAAC,cAAC4I,EAAD,CAAOyC,KAAMjN,KAAKiH,MAAM0D,YACpBuC,OAAQlN,KAAKgN,WAAWpK,KAAK5C,MAC7ByC,kBAAgB,eAChBf,EAAAC,EAAAC,cAAA,QAAM0G,SAAUtI,KAAKmN,YAAYvK,KAAK5C,OAClC0B,EAAAC,EAAAC,cAAC4I,EAAM4C,OAAP,CAAcC,aAAW,GACrB3L,EAAAC,EAAAC,cAAC4I,EAAM8C,MAAP,CAAa3E,GAAG,eAAe,oBAAsB3I,KAAKiH,MAAMsG,mBAEpE7L,EAAAC,EAAAC,cAAC4I,EAAMgD,KAAP,KACI9L,EAAAC,EAAAC,cAAA,OAAKO,MAAM,iBACPT,EAAAC,EAAAC,cAAA,8BAAqBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,OACrBH,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,QAAQC,MAAOvH,KAAKiH,MAAMK,KAAMkB,YAAY,QAAQC,UAAQ,KAEtJ/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,iBACPT,EAAAC,EAAAC,cAAA,mCAA0BF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,OAC1BH,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,cAAcC,MAAOvH,KAAKiH,MAAMyE,YAAalD,YAAY,cAAcC,UAAQ,KAEzK/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,iBACPT,EAAAC,EAAAC,cAAA,gCAAuBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,OACvBH,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,SAASpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,SAASC,MAAOvH,KAAKiH,MAAMwG,QAASjF,YAAY,SAASC,UAAQ,MAGjK/G,EAAAC,EAAAC,cAAC4I,EAAMkD,OAAP,KACIhM,EAAAC,EAAAC,cAAC4I,EAAMmD,QAAP,CAAe9L,UAAU,mBAAzB,UACAH,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAAS1G,UAAU,mBAAhC,iBAhOeoB,wCCFlB2K,cACjB,SAAAA,EAAY5M,GAAO,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAA4N,IACf3M,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAA8N,GAAAxM,KAAApB,KAAMgB,KAyHV8F,SAAW,SAACC,GACRhB,QAAQQ,IAAIQ,EAAMM,OAAOC,MACzB,IAAIuG,EAAc,KAEdA,EADqB,gBAArB9G,EAAMM,OAAOC,KACCxH,OAAOgO,OAAO7M,EAAKgG,MAAM4G,YAAa,CAAEE,aAAchH,EAAMM,OAAOE,MAAM8D,OAAS,EAAItE,EAAMM,OAAOE,MAAQ,OAG3GzH,OAAOgO,OAAO7M,EAAKgG,MAAM4G,YAAzB/N,OAAAsH,EAAA,EAAAtH,CAAA,GAAyCiH,EAAMM,OAAOC,KAAOP,EAAMM,OAAOE,QAE5FtG,EAAKkG,SAAS,CAAE0G,cAAaG,aAAa,EAAMlD,WAAY,QAjI5D7J,EAAKgG,MAAQ,CACT6D,WAAY,KACZD,cAAe,KACfmD,aAAa,EACbC,iBAAkB,GAClBC,oBAAqB,GACrBL,YAAa,CACTvG,KAAM,GACNmG,QAAS,GACTlN,MAAO,GACPiE,WAAY,GACZ2J,cAAe,GACfC,QAAS,GACTL,aAAc,GACdM,YAAa,OAhBNpN,mFAqBC,IAAA8G,EAAA/H,KAChBuE,EAAW1B,cAAciH,WAAW,SAACjE,GACjCE,QAAQQ,IAAIV,GACRA,EAASpB,SACTsD,EAAKZ,SAAS,CACV0G,YAAahI,EACbqI,oBAAqBrI,EAASkI,aAAelI,EAASkI,aAAe,MAG9E,SAAC/H,GACAD,QAAQQ,IAAIP,KAEhBzB,EAAW1B,cAAcyL,mBAAmB,SAACzI,GACzCE,QAAQQ,IAAIV,GACRA,EAASpB,SACTsD,EAAKZ,SAAS,CAAE8G,iBAAkBpI,EAAS0I,qBAEhD,SAACvI,GACAD,QAAQQ,IAAIP,sCAIX,IAAAgD,EAAAhJ,KACDgI,EAAc,KAIlB,OAHKxG,aAAaC,QAAQzC,EAAaG,cACnC6I,EAActG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAUlG,GAAG,OAG3BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVmG,EACDtG,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAAA,OAAKO,MAAM,qBACNnC,KAAKiL,wBACNvJ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,mBAGPT,EAAAC,EAAAC,cAAA,UAAK5B,KAAKiH,MAAM4G,YAAYvG,OAEhC5F,EAAAC,EAAAC,cAAA,OAAKO,MAAM,2BACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,iCAA4BF,EAAAC,EAAAC,cAAA,WAC5BF,EAAAC,EAAAC,cAAA,QAAM0G,SAAUtI,KAAKwO,aAAa5L,KAAK5C,OACnC0B,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,OAAOC,MAAOvH,KAAKiH,MAAM4G,YAAYvG,KAAMkB,YAAY,OAAOC,UAAQ,KAEhK/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,aAAaC,MAAOvH,KAAKiH,MAAM4G,YAAYrJ,WAAYgE,YAAY,cAAcC,UAAQ,EAACgG,UAAQ,KAE5L/M,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,YAAUO,MAAM,+BAA+BuM,KAAK,IAAI5H,SAAU9G,KAAK8G,SAAUQ,KAAK,UAAUC,MAAOvH,KAAKiH,MAAM4G,YAAYO,QAAS5F,YAAY,cAEvJ9G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,QAAQC,MAAOvH,KAAKiH,MAAM4G,YAAYtN,MAAOiI,YAAY,QAAQiG,UAAQ,KAEnK/M,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,gBAAgBC,MAAOvH,KAAKiH,MAAM4G,YAAYM,cAAe3F,YAAY,oBAEnK9G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,UAAUC,MAAOvH,KAAKiH,MAAM4G,YAAYJ,QAASjF,YAAY,aAEvJ9G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAC+M,EAAAhN,EAAD,CACIiN,aAAc,CAAEC,MAAO,QACvBC,WAAY,CAAEjN,UAAW,YAAayF,KAAM,eAAgBkB,YAAa,gBACzEuG,aAAc,SAACC,GAAD,OAAUA,GACxBC,MAAOjP,KAAKiH,MAAMgH,iBAClBiB,WAAY,SAACF,EAAMG,GAAP,OACRzN,EAAAC,EAAAC,cAAA,OAAKsK,MAAO,CAAEkD,WAAYD,EAAgB,YAAc,QAASE,QAAS,QACrEL,IAGTM,YAAa,SAACtO,GAAD,OACTU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAWZ,GACVgI,EAAK/B,MAAM4G,YAAYE,aACpBrM,EAAAC,EAAAC,cAAA,QAAMC,UAAWmH,EAAK/B,MAAM4G,YAAY0B,2BAA6B,yBAA2B,6BAC9F,OAGdhI,MAAOvH,KAAKiH,MAAM4G,YAAYE,aAAe/N,KAAKiH,MAAM4G,YAAYE,aAAe,GACnFyB,SAAU,SAACR,GACP,IAAInB,EAAc/N,OAAOgO,OAAO9E,EAAK/B,MAAM4G,YAAa,CAAEE,aAAciB,IACxEhG,EAAK7B,SAAS,CAAE0G,cAAaG,aAAa,EAAMlD,WAAY,QAEhEhE,SAAU9G,KAAK8G,YAGvBpF,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,cAAcC,MAAOvH,KAAKiH,MAAM4G,YAAYQ,YAAa7F,YAAY,kBAE/J9G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,0BACPT,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASpG,MAAM,yBAAyBsM,UAAWzO,KAAKiH,MAAM+G,aAA3E,2DAsBnBjH,GAAO,IAAAiD,EAAAhK,KAChB+G,EAAMkD,iBACN1F,EAAW1B,cAAc4M,cAAczP,KAAKiH,MAAM4G,YAAa,SAAChI,GAC5DE,QAAQQ,IAAIV,GACRA,EAASpB,QACTuF,EAAK7C,SAAS,CAAE0G,YAAahI,EAAUiF,WAAYjF,EAASe,QAASiE,eAAe,IAGpFb,EAAK7C,SAAS,CAAE2D,WAAYjF,EAASe,QAASiE,eAAe,KAElE,SAAC7E,GACAD,QAAQQ,IAAIP,GACZgE,EAAK7C,SAAS,CAAE2D,WAAY9E,EAAO6E,eAAe,sDAKtD,GAAI7K,KAAKiH,MAAM6D,WACX,OACIpJ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,QAAQN,UAAW7B,KAAKiH,MAAM4D,cAAgB,gBAAkB,eAAgBxI,KAAK,SAC3FrC,KAAKiH,MAAM6D,mEA3JO7H,uCCAnCuH,EAAQC,EAAQ,IAECiF,cAEjB,SAAAA,EAAY1O,GAAO,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAA0P,IACfzO,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAA4P,GAAAtO,KAAApB,KAAMgB,KAkIV8F,SAAW,SAACC,GACR9F,EAAKkG,SAALrH,OAAAsH,EAAA,EAAAtH,CAAA,GAAiBiH,EAAMM,OAAOC,KAAOP,EAAMM,OAAOE,SAlIlDtG,EAAKgG,MAAQ,CACT0D,aAAa,EACbgF,gBAAiB,GACjB9E,eAAe,EACfC,WAAY,MAND7J,mFAWfjB,KAAK4P,8DAGU,IAAA7H,EAAA/H,KACfuE,EAAW1B,cAAcgN,oBAAoB,SAAChK,GAC1CE,QAAQQ,IAAIV,GACRA,EAASpB,SACTsD,EAAKZ,SAAS,CAAEwI,gBAAiB9J,EAASkI,gBAE/C,SAAC/H,GACA+B,EAAKZ,SAAS,CAAE0D,eAAe,EAAOC,WAAY9E,IAClDD,QAAQQ,IAAIP,qDAKhB,GAAIhG,KAAKiH,MAAM6D,WACX,OACIpJ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,QAAQN,UAAW7B,KAAKiH,MAAM4D,cAAgB,gBAAkB,eAAgBxI,KAAK,SAC3FrC,KAAKiH,MAAM6D,6CAOxB,IAAI9C,EAAc,KAIlB,OAHKxG,aAAaC,QAAQzC,EAAaG,cACnC6I,EAActG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAUlG,GAAG,OAG3BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACVmG,EACDtG,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACV7B,KAAKiL,wBACNvJ,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASpG,MAAM,sBAAsBO,QAAS1C,KAAKuM,UAAU3J,KAAK5C,OAC3E0B,EAAAC,EAAAC,cAAA,QAAMO,MAAM,6BADhB,yBAIJT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACV7B,KAAK8P,uBAET9P,KAAKmL,mEAKI,IAAAnC,EAAAhJ,KACdoL,EAAQ,GAQZ,OAPApL,KAAKiH,MAAM0I,gBAAgBrE,IAAI,SAACyE,EAAKvE,GACjCJ,EAAMpI,KACFtB,EAAAC,EAAAC,cAACoO,EAAArO,EAAD,CAAasO,QAASF,EAAIzI,MACrB0B,EAAKkH,cAAcH,EAAII,uBAI7B/E,wCAGGgF,GAAU,IAAApG,EAAAhK,KAChBoL,EAAQ,GACZ,OAAuB,GAAnBgF,EAAS/E,OAEL3J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,oCAIZwO,EAAS9E,IAAI,SAAC+E,EAAS7E,GACnB,IAAI8E,EAAO,CAAE/P,MAAO8P,EAAQ9P,MAAOgQ,YAAY,GAC3CC,EAAO,CAAEjQ,MAAO8P,EAAQ9P,MAAOgQ,YAAY,GAC/CnF,EAAMpI,KACFtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAKyO,EAAQ/I,MACb5F,EAAAC,EAAAC,cAAA,UAAKyO,EAAQ9P,OACbmB,EAAAC,EAAAC,cAAA,UAAQO,MAAM,kBAAkBO,QAASsH,EAAKyG,eAAe7N,KAAKoH,EAAMsG,IACpE5O,EAAAC,EAAAC,cAAA,QAAMO,MAAM,2BADhB,WAGAT,EAAAC,EAAAC,cAAA,UAAQQ,KAAK,IAAID,MAAM,iBAAiBO,QAASsH,EAAKyG,eAAe7N,KAAKoH,EAAMwG,IAC5E9O,EAAAC,EAAAC,cAAA,QAAMO,MAAM,+BADhB,gBAMLiJ,+CAIP,OACI1J,EAAAC,EAAAC,cAAC8O,EAAD,CAAOzD,KAAMjN,KAAKiH,MAAM0D,YACpBuC,OAAQlN,KAAKgN,WAAWpK,KAAK5C,MAC7ByC,kBAAgB,eAChBf,EAAAC,EAAAC,cAAA,QAAM0G,SAAUtI,KAAK2Q,UAAU/N,KAAK5C,OAChC0B,EAAAC,EAAAC,cAAC8O,EAAMtD,OAAP,CAAcC,aAAW,GACrB3L,EAAAC,EAAAC,cAAC8O,EAAMpD,MAAP,CAAa3E,GAAG,eAAhB,6BAEJjH,EAAAC,EAAAC,cAAC8O,EAAMlD,KAAP,KACI9L,EAAAC,EAAAC,cAAA,OAAKO,MAAM,iBACPT,EAAAC,EAAAC,cAAA,kCAAyBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,OACzBH,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,OAAOC,MAAOvH,KAAKiH,MAAMK,KAAMkB,YAAY,OAAOC,UAAQ,KAEpJ/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,iBACPT,EAAAC,EAAAC,cAAA,2BAAkBF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,OAClBH,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,cAAcC,MAAOvH,KAAKiH,MAAMyE,YAAalD,YAAY,cAAcC,UAAQ,KAEzK/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,iBACPT,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,OACdH,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,+BAA+B2E,SAAU9G,KAAK8G,SAAUQ,KAAK,UAAUC,MAAOvH,KAAKiH,MAAMwG,QAASjF,YAAY,UAAUC,UAAQ,MAGjK/G,EAAAC,EAAAC,cAAC8O,EAAMhD,OAAP,KACIhM,EAAAC,EAAAC,cAAC8O,EAAM/C,QAAP,CAAe9L,UAAU,mBAAzB,UACAH,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAAS1G,UAAU,mBAAhC,iDAYhB7B,KAAKmH,SAAS,CAAEwD,aAAa,yCAI7B3K,KAAKmH,SAAS,CAAEwD,aAAa,sCAGvB5D,GAAO,IAAAsD,EAAArK,KACb+G,EAAMkD,iBADO,IAAAC,EAEwBlK,KAAKiH,MAEtC2F,EAAM,CAAEtF,KAJC4C,EAEP5C,KAEYmG,QAJLvD,EAEDuD,QAEe/B,YAJdxB,EAEQwB,YAEmBnL,MAD7Be,KAAKC,MAAMC,aAAaC,QAAQzC,EAAaK,eACJkB,OACpDgE,EAAW1B,cAAc+N,mBAAmBhE,EAAK,SAAC/G,GAC9CE,QAAQQ,IAAIV,GACRA,EAASpB,UACT4F,EAAKuF,mBACLvF,EAAK2C,aACL3C,EAAKlD,SAAS,CAAEG,KAAM,KAAMoE,YAAa,KAAM+B,QAAS,SAE7D,SAACzH,GACAD,QAAQQ,IAAIP,4CAIL4G,GAAK,IAAAiE,EAAA7Q,KAChBuE,EAAW1B,cAAc4N,eAAe7D,EAAK,SAAC/G,GACtCA,EAASpB,SACToM,EAAKjB,mBACLiB,EAAK1J,SAAS,CAAE0D,eAAe,EAAMC,WAAYjF,EAASe,WAG1DiK,EAAK1J,SAAS,CAAE0D,eAAe,EAAOC,WAAYjF,EAASe,WAEhE,SAACZ,GACA6K,EAAK1J,SAAS,CAAE0D,eAAe,EAAOC,WAAY9E,aA5KlB/C,aCAvB6N,UAFTrG,EAAQ,gBAGhB,SAAAqG,EAAY9P,GAAO,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAA8Q,IACf7P,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAAgR,GAAA1P,KAAApB,KAAMgB,KAyDV8F,SAAW,SAACC,GAC2D,IAAAC,EAE9D+J,EAFoB,SAAtBhK,EAAMM,OAAOC,MAAuC,cAApBP,EAAMM,OAAOC,KAC5CrG,EAAKkG,UAALH,EAAA,GAAAlH,OAAAsH,EAAA,EAAAtH,CAAAkH,EAAiBD,EAAMM,OAAOC,KAAOP,EAAMM,OAAO2J,SAAlDlR,OAAAsH,EAAA,EAAAtH,CAAAkH,EAAA,eAAwE,GAAxElH,OAAAsH,EAAA,EAAAtH,CAAAkH,EAAA,kBAA8F,GAA9FA,IAEA/F,EAAKkG,UAAL4J,EAAA,GAAAjR,OAAAsH,EAAA,EAAAtH,CAAAiR,EAAiBhK,EAAMM,OAAOC,KAAOP,EAAMM,OAAOE,OAAlDzH,OAAAsH,EAAA,EAAAtH,CAAAiR,EAAA,eAAsE,GAAtEjR,OAAAsH,EAAA,EAAAtH,CAAAiR,EAAA,kBAA4F,GAA5FA,KA5DJ9P,EAAKgQ,KAAK,SACVhQ,EAAKgG,MAAQ,CACT0D,aAAa,EACb7F,UAAW,GACX4G,YAAa,GACbE,UAAW,GACXE,QAAS,GACToF,OAAQ,GACRC,SAAU,GACVnF,YAAa,GACbD,YAAa,GACbE,gBAAiB,GACjBmF,SAAU,GACVC,MAAM,EACNjF,WAAW,EACXkF,gBAAe,GAjBJrQ,mFAsBZjB,KAAKgB,MAAMuQ,UACPvR,KAAKgB,MAAMuQ,SAAStK,OAASjH,KAAKgB,MAAMuQ,SAAStK,MAAMnC,YACtD9E,KAAKwR,oBAAoBxR,KAAKgB,MAAMuQ,SAAStK,MAAMnC,UAAW,SAC9D9E,KAAKiR,KAAK,sDAKFnM,EAAWzC,GAAM,IAAA0F,EAAA/H,KACjCuE,EAAW1B,cAAc4O,mBAAmB3M,EAAWzC,EAAM,SAACwD,GAC1DE,QAAQQ,IAAIV,GACRA,EAASpB,QACTsD,EAAKZ,SAAS,CACVrC,UAAWe,EAASf,UACpB4G,YAAa7F,EAAS6F,YACtBE,UAAW,IAAID,KAAK9F,EAAS+F,WAAW8F,cACxC5F,QAAS,IAAIH,KAAK9F,EAASiG,SAAS4F,cACpCR,OAAQrL,EAASqL,OAAOS,KAAK,MAC7BR,SAAUtL,EAASsL,SAASQ,KAAK,MACjC3F,YAAanG,EAASmG,YACtBD,YAAalG,EAASkG,YACtBE,gBAAiBpG,EAASoG,gBAC1BmF,SAAUvL,EAASuL,SACnBC,KAAMxL,EAASwL,KACfjF,UAAWvG,EAASuG,YAIxBrE,EAAKZ,SAAS,CAACmK,gBAAe,EAAM5J,aAAa7B,EAASe,WAE/D,SAACZ,GACAD,QAAQQ,IAAIP,GACZ+B,EAAKZ,SAAS,CAACmK,gBAAe,EAAM5J,aAAa1B,uCAYhDe,GAAO,IAAAiC,EAAAhJ,KACZ+G,EAAMkD,iBACNlE,QAAQQ,IAAIvG,KAAKiH,OAFL,IAAAiD,EAIuClK,KAAKiH,MADlDnC,EAHMoF,EAGNpF,UAAW4G,EAHLxB,EAGKwB,YAAaE,EAHlB1B,EAGkB0B,UAAWE,EAH7B5B,EAG6B4B,QAASoF,EAHtChH,EAGsCgH,OAAQC,EAH9CjH,EAG8CiH,SAAUnF,EAHxD9B,EAGwD8B,YAAaD,EAHrE7B,EAGqE6B,YAC7EE,EAJQ/B,EAIR+B,gBAAiBmF,EAJTlH,EAISkH,SAAUC,EAJnBnH,EAImBmH,KAAMjF,EAJzBlC,EAIyBkC,UACrC7H,EAAW1B,cAAc+O,sBAAuB,CAAE9M,YAAW4G,cAAaE,UAAY,IAAID,KAAKC,GAAYiG,UAAW/F,QAAU,IAAIH,KAAKG,GAAU+F,UAAWX,OAAQA,EAAOY,MAAM,KAAKxG,IAAI,SAAAyG,GAAG,OAAEA,EAAIC,SACjMb,SAAUA,EAASW,MAAM,KAAKxG,IAAI,SAAAyG,GAAG,OAAEA,EAAIC,SAAShG,cAAaD,cAAaE,kBAAiBmF,WAC/FC,OAAMjF,aAAY,SAACvG,GACnBE,QAAQQ,IAAIV,GACRA,EAASpB,UACT+E,MAAM3D,EAASe,SACf/F,EAAQmC,KAAK,gBAElB,SAACgD,GACAD,QAAQQ,IAAIP,GACZgD,EAAK7B,SAAS,CAACmK,gBAAe,EAAM5J,aAAa1B,6CAKrD,GAAIhG,KAAKiH,MAAMqK,eACX,OACI5P,EAAAC,EAAAC,cAAA,OAAKO,MAAM,qBAAqBE,KAAK,SAChCrC,KAAKiH,MAAMS,+CAOxB,IAAIM,EAAc,KAIlB,OAHKxG,aAAaC,QAAQzC,EAAaG,cACnC6I,EAActG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAUlG,GAAG,OAG3BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACVmG,EACDtG,EAAAC,EAAAC,cAACsG,EAAD,MACClI,KAAKiS,eACNvQ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,gCACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,iBACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,yCACPT,EAAAC,EAAAC,cAAA,UAAkB,UAAb5B,KAAKiR,KAAmB,mBAAqB,qBAEtDvP,EAAAC,EAAAC,cAAA,OAAKO,MAAM,6CACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,4BACPT,EAAAC,EAAAC,cAAA,QAAMO,MAAM,oCAAoCmG,SAAUtI,KAAKsI,SAAS1F,KAAK5C,OACzE0B,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,aAAX,cACAxQ,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,eAAemF,KAAK,YAAYR,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAMnC,UAAW2J,SAAuB,UAAbzO,KAAKiR,KAAmCzI,YAAY,aAAaC,UAAQ,IAC7M/G,EAAAC,EAAAC,cAAA,SAAO+G,GAAG,YAAYxG,MAAM,wBAA5B,iCAEJT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,eAAX,eACAxQ,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,eAAemF,KAAK,cAAcR,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAMyE,YAAalD,YAAY,cAAcE,UAAU,KAAKD,UAAQ,KAEnL/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,mBACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,OACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,aAAX,cACAxQ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,oBACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOjB,KAAK,YAAYnF,MAAM,eAAe2E,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAM2E,UAAUuG,OAAO,EAAG,IAAK1J,UAAQ,IAChJ/G,EAAAC,EAAAC,cAAA,QAAMO,MAAM,qBACRT,EAAAC,EAAAC,cAAA,QAAMO,MAAM,qCAK5BT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,WAAX,YACAxQ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,oBACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,eAAemF,KAAK,UAAUR,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAM6E,QAAQqG,OAAO,EAAG,IAAK1J,UAAQ,IAC5I/G,EAAAC,EAAAC,cAAA,QAAMO,MAAM,qBACRT,EAAAC,EAAAC,cAAA,QAAMO,MAAM,uCAOpCT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,UACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,UAAX,UACAxQ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,eAAemF,KAAK,SAASkB,YAAY,yBAAyB1B,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAMiK,OAAQzI,UAAQ,MAGzK/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,UAAX,YACAxQ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,eAAemF,KAAK,WAAWkB,YAAY,2BAA2B1B,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAMkK,SAAU1I,UAAQ,MAG/K/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,4BACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,OACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,eAAX,qBACAxQ,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,SAASpG,MAAM,eAAemF,KAAK,cAAckB,YAAY,oBAAoB1B,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAM8E,YAAatD,UAAQ,KAE5K/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,eAAX,qBACAxQ,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,SAASpG,MAAM,eAAemF,KAAK,cAAckB,YAAY,oBAAoB1B,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAM+E,YAAavD,UAAQ,OAIpL/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,uBACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,OACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,mBAAX,oBACAxQ,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,SAASpG,MAAM,eAAemF,KAAK,kBAAkBkB,YAAY,mBAAmB1B,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAMgF,gBAAiBxD,UAAQ,KAEnL/G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,YAAX,YACAxQ,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,SAASpG,MAAM,eAAemF,KAAK,WAAWR,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAMmK,SAAU5I,YAAY,gBAIlJ9G,EAAAC,EAAAC,cAAA,OAAKO,MAAM,IACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,OACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,aACXT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,eAGnBT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,WAAWpG,MAAM,mBAAmBmF,KAAK,OAAOR,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOgR,QAAShR,KAAKiH,MAAMoK,OACpH3P,EAAAC,EAAAC,cAAA,SAAOO,MAAM,mBAAmB+P,IAAI,QAApC,sCAEJxQ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,WAAWpG,MAAM,mBAAmBmF,KAAK,YAAYR,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOgR,QAAShR,KAAKiH,MAAMmF,YACzH1K,EAAAC,EAAAC,cAAA,SAAOO,MAAM,mBAAmB+P,IAAI,aAApC,4BAEJxQ,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASpG,MAAM,sBAA5B,uBAvMSc,uBCFvCmP,UAAc3H,EAAQ,MAEP4H,cACjB,SAAAA,EAAYrR,GAAO,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAqS,IACfpR,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAAuS,GAAAjR,KAAApB,KAAMgB,KACDiG,MAAQ,CACT1G,MAAO,KACPuE,UAAW,KACXwN,cAAe,KACflB,SAAU,KACVmB,gBAAiB,KACjBC,UAAW,MAGfvR,EAAKwR,YAAYxR,EAAKwR,YAAY7P,KAAjB9C,OAAA8H,EAAA,EAAA9H,CAAAmB,IAXFA,mFAcC,IAAA8G,EAAA/H,KAChB+F,QAAQQ,IAAKmM,OAAOnB,SAAS5E,QAC7B,IAAIgG,EAAQP,EAAY7Q,MAAMmR,OAAOnB,SAAS5E,QAC9C3M,KAAKmH,SAASwL,EAAM,WAChBpO,EAAW1B,cAAc+P,gBAAgB7K,EAAKd,MAAM1G,MAAOwH,EAAKd,MAAMnC,UAAW,SAACe,GAC3EA,EAASpB,QACRsD,EAAKZ,SAAS,CACVmL,cAAezM,EAASyM,cACxBO,gBAAiBhN,EAASgN,gBAC1BzB,SAAUvL,EAASuL,SACnBmB,gBAAiB1M,EAAS0M,gBAC1BC,UAAU3M,IAId2D,MAAM3D,EAASe,UAErB,SAACZ,GACCD,QAAQQ,IAAIP,6CAMpBzB,EAAW1B,cAAc4P,YAAzB3S,OAAAgT,EAAA,EAAAhT,CAAA,GAAyCE,KAAKiH,MAAMuL,UAApD,CAA+DjS,MAAOP,KAAKiH,MAAM1G,QAAO,SAACsF,GAClFA,EAASpB,SACR+E,MAAM,uBACN3I,EAAQmC,KAAK,eAGbwG,MAAM3D,EAASe,UAErB,SAACZ,GACCD,QAAQQ,IAAIP,GACZwD,MAAMxD,sCAKV,IAAIgC,EAAc,KAIlB,OAHKxG,aAAaC,QAAQzC,EAAaG,cACnC6I,EAActG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAUlG,GAAG,OAG3BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACVmG,EACDtG,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAAA,OAAKO,MAAM,6BACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,mCACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,wBACPT,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKO,MAAM,gCACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,OACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,sBACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,gBAAgBnC,KAAKiH,MAAMnC,aAE9CpD,EAAAC,EAAAC,cAAA,OAAKO,MAAM,uBACPT,EAAAC,EAAAC,cAAA,QAAMO,MAAM,gBAAZ,KAA8BnC,KAAKiH,MAAMqL,cAAzC,OAGR5Q,EAAAC,EAAAC,cAAA,OAAKO,MAAM,OACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,sBACPT,EAAAC,EAAAC,cAAA,QAAMO,MAAM,gBAAZ,eAEJT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,uBACPT,EAAAC,EAAAC,cAAA,QAAMO,MAAM,gBAAgBnC,KAAKiH,MAAM4L,gBAAgB,OAG/DnR,EAAAC,EAAAC,cAAA,OAAKO,MAAM,OACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,sBACPT,EAAAC,EAAAC,cAAA,QAAMO,MAAM,gBAAZ,oBAEJT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,uBACPT,EAAAC,EAAAC,cAAA,QAAMO,MAAM,gBAAgBnC,KAAKiH,MAAMmK,YAG/C1P,EAAAC,EAAAC,cAAA,OAAKO,MAAM,sBACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,sBACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,gBAAZ,WAEPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,uBACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,gBAAZ,IAA6B4Q,SAAS/S,KAAKiH,MAAMsL,sBAIhE7Q,EAAAC,EAAAC,cAAA,UAAQO,MAAM,qBAAqBO,QAAS1C,KAAKyS,YAAY7P,KAAK5C,OAAlE,kBApGSiD,aCDhB+P,UAFTvI,EAAQ,gBAGhB,SAAAuI,EAAYhS,GAAO,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgT,IACf/R,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAAkT,GAAA5R,KAAApB,KAAMgB,KACDiG,MAAQ,CACT0D,aAAa,EACb/F,QAAS,KACTiG,cAAe,KACfC,WAAY,KACZmI,IAAK,KACLC,SAAU,KACVC,WAAY,KACZ9Q,KAAM,SACNyC,UAAW,KACXsO,MAAO,IAEXnS,EAAKI,KAAOC,KAAKC,MAAMC,aAAaC,QAAQzC,EAAaK,eAd1C4B,mFAiBC,IAAA8G,EAAA/H,KAChB+F,QAAQQ,IAAIvG,KAAKgB,MAAMuQ,SAAStK,MAAMnC,UAAW9E,KAAKgB,MAAMuQ,SAAStK,MAAM5E,MAC3ErC,KAAKmH,SAAS,CAAErC,UAAW9E,KAAKgB,MAAMuQ,SAAStK,MAAMnC,UAAWzC,KAAMrC,KAAKgB,MAAMuQ,SAAStK,MAAM5E,MAAQ,WACpG0F,EAAKyJ,oBAAoBzJ,EAAKd,MAAMnC,UAAWiD,EAAKd,MAAM5E,oDAI9CyC,EAAWzC,GAAM,IAAA2G,EAAAhJ,KACjCuE,EAAW1B,cAAc4O,mBAAmB3M,EAAWzC,EAAM,SAACwD,GAE1D,GADAE,QAAQQ,IAAIV,GACRA,EAASpB,QACT,GAAuB,UAAnBuE,EAAK/B,MAAM5E,KAAkB,CAC7B,IAAIgR,EAAOvT,OAAOwT,KAAKzN,EAASwN,MAC5BJ,EAAM,KACS,GAAfI,EAAKhI,QAAexF,EAASwN,KAAKA,EAAK,IAAIE,aAC3CN,EAAMpN,EAASwN,KAAKA,EAAK,IAAIE,YAE7B1N,EAASpB,SACTuE,EAAK7B,SAAS,CACVvC,QAASiB,EACToN,YAIgB,SAAnBjK,EAAK/B,MAAM5E,MAChB2G,EAAK7B,SAAS,CAAEiM,MAAOvN,EAASuN,aAIpCpK,EAAK7B,SAAS,CAAE0D,eAAe,EAAOC,WAAYjF,EAASe,WAEhE,SAACZ,GACAD,QAAQQ,IAAIP,GACZgD,EAAK7B,SAAS,CAAE0D,eAAe,EAAOC,WAAY9E,sDAKtD,GAAIhG,KAAKiH,MAAM6D,WACX,OACIpJ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,QAAQN,UAAW7B,KAAKiH,MAAM4D,cAAgB,gBAAkB,eAAgBxI,KAAK,SAC3FrC,KAAKiH,MAAM6D,6CAQxB,IAAI9C,EAAc,KAIlB,OAHKxG,aAAaC,QAAQzC,EAAaG,cACnC6I,EAActG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAUlG,GAAG,OAG3BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACVmG,EACDtG,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACV7B,KAAKiL,yBAETjL,KAAKiH,MAAMrC,SAA8B,UAAnB5E,KAAKiH,MAAM5E,KAAmBrC,KAAKwT,gBAAkB,KACxD,SAAnBxT,KAAKiH,MAAM5E,MAAmBrC,KAAKiH,MAAMmM,MAAQpT,KAAKyT,mBAAqB,KACxD,UAAnBzT,KAAKiH,MAAM5E,MAAoBrC,KAAKiH,MAAMrC,QAAU5E,KAAK0T,qBAAuB,4CAK/E3M,GACVhB,QAAQQ,IAAIQ,EAAMM,OAAOE,OACzB,IAAI8L,EAAOrT,KAAKiH,MAAMmM,MAAMrM,EAAMM,OAAOC,MACrC8L,EAAQpT,KAAKiH,MAAMmM,MACvBC,EAAI,MAAYtM,EAAMM,OAAOE,MAC7B6L,EAAMO,OAAO5M,EAAMM,OAAOC,KAAM,EAAG+L,GACnCrT,KAAKmH,SAAS,CAAEiM,qDAGD,IAAApJ,EAAAhK,KAIf,OAFA+F,QAAQQ,IAAIvG,KAAKiH,MAAMmM,OAGnB1R,EAAAC,EAAAC,cAAA,OAAKO,MAAM,aACPT,EAAAC,EAAAC,cAAA,UAAK5B,KAAKiH,MAAMnC,WAChBpD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAM0G,SAAUtI,KAAK4T,cAAchR,KAAK5C,OACpC0B,EAAAC,EAAAC,cAAA,SAAOO,MAAM,yBACTT,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,qBAGRF,EAAAC,EAAAC,cAAA,aAEQ5B,KAAKiH,MAAMmM,MAAM9H,IAAI,SAAC+H,EAAM7H,GACxB,OACI9J,EAAAC,EAAAC,cAAA,MAAIiS,IAAKrI,GACL9J,EAAAC,EAAAC,cAAA,UAAKyR,EAAKH,UACVxR,EAAAC,EAAAC,cAAA,UAAKyR,EAAKE,YACV7R,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeyF,KAAMkE,EAAOjD,KAAK,SAASzB,SAAUkD,EAAK8J,cAAclR,KAAKoH,GAAOzC,MAAOwM,WAAWV,EAAKW,OAAQC,IAAI,IAAIC,IAAI,KAAKC,KAAK,MAAM1L,UAAQ,UAQnM/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMqK,MAAO,CAAEC,UAAW,WACrCzK,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAAS1G,UAAU,6BAAhC,uDAONkF,GAAO,IAAAsD,EAAArK,KACjB+G,EAAMkD,iBACN,IAAI2C,EAAM,CACNwH,MAASpU,KAAKqB,KAAKd,MACnBuE,UAAa9E,KAAKiH,MAAMnC,UACxBsO,MAASpT,KAAKiH,MAAMmM,OAExB7O,EAAW1B,cAAcwR,mBAAmBzH,EAAK,SAAC/G,GAC9CE,QAAQQ,IAAIV,GACTA,EAASpB,QACR4F,EAAKlD,SAAS,CAAE0D,eAAe,EAAMC,WAAYjF,EAASe,UAG1DyD,EAAKlD,SAAS,CAAE0D,eAAe,EAAOC,WAAYjF,EAASe,WAEhE,SAACZ,GACAD,QAAQQ,IAAIP,GACZqE,EAAKlD,SAAS,CAAE0D,eAAe,EAAOC,WAAY9E,8CAKtD,OACItE,EAAAC,EAAAC,cAAA,OAAKO,MAAM,6BACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,2CACPT,EAAAC,EAAAC,cAAA,UAAK5B,KAAKiH,MAAMrC,QAAQE,YAE5BpD,EAAAC,EAAAC,cAAA,OAAKO,MAAM,+CACPT,EAAAC,EAAAC,cAAA,SAAI5B,KAAKiH,MAAMrC,QAAQ8G,cAG3BhK,EAAAC,EAAAC,cAAA,OAAKO,MAAM,2CACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,OACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,gBAAgET,EAAAC,EAAAC,cAAA,QAAMO,MAAM,+BAA+BmS,cAAY,QAAvD,KAAuE,IAAI3I,KAAK3L,KAAKiH,MAAMrC,QAAQgH,WAAWC,iBAErLnK,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,cAA8DT,EAAAC,EAAAC,cAAA,QAAMO,MAAM,+BAA+BmS,cAAY,QAAvD,KAAuE,IAAI3I,KAAK3L,KAAKiH,MAAMrC,QAAQkH,SAASD,iBAEjLnK,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,yBAA0EnC,KAAKiH,MAAMrC,QAAQyM,KAAO,MAAQ,OAEnH3P,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,cAA+DnC,KAAKiH,MAAMrC,QAAQuM,SAASQ,KAAK,QAEvGjQ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,uBAAwEnC,KAAKiH,MAAMrC,QAAQqH,kBAElGvK,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,cAA+DnC,KAAKiH,MAAMrC,QAAQwM,WAEzF1P,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,uBAAwEnC,KAAKiH,MAAMrC,QAAQmH,cAElGrK,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,uBAAwEnC,KAAKiH,MAAMrC,QAAQoH,8DASlH,IAAIqH,EAAOvT,OAAOwT,KAAKtT,KAAKiH,MAAMrC,QAAQyO,MAC1C,OAAmB,GAAfA,EAAKhI,OACErL,KAAKuU,qBAGRvU,KAAKiH,MAAMrC,QAAQyO,KAAKA,EAAK,IAAImB,QAC1BxU,KAAKyU,kBAAiB,GAGtBzU,KAAKyU,kBAAiB,4CAKxBC,GAA2BC,UAAAtJ,OAAA,QAAAuJ,IAAAD,UAAA,IAAAA,UAAA,GACxC,OACIjT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,gCACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,OACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,yCACPT,EAAAC,EAAAC,cAAA,+BAEJF,EAAAC,EAAAC,cAAA,OAAKO,MAAM,6CACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,4BACPT,EAAAC,EAAAC,cAAA,QAAMO,MAAM,oCAAoCmG,SAAUtI,KAAKuT,WAAW3Q,KAAK5C,OAC3E0B,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,OAAX,cACAxQ,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,eAAemF,KAAK,MAAMR,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAMgM,IAAKzK,YAAY,MAAMC,UAAQ,KAE5I/G,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASpG,MAAM,qBAAqBsM,UAAWiG,GAA5D,kDAUjB3N,GAAO,IAAA8J,EAAA7Q,KACd+G,EAAMkD,iBACN,IAEI2C,EAAM,CACNsG,SAHOpT,OAAOwT,KAAKtT,KAAKiH,MAAMrC,QAAQyO,MACtB,GAGhBvO,UAAW9E,KAAKiH,MAAMrC,QAAQE,UAC9BmO,IAAKjT,KAAKiH,MAAMgM,KAEpB1O,EAAW1B,cAAcgS,gBAAgBjI,EAAK,SAAC/G,GACvCA,EAASpB,SACToM,EAAKW,oBAAoBX,EAAK7P,MAAMuQ,SAAStK,MAAMnC,UAAW,UAC9D+L,EAAK1J,SAAS,CAAE2D,WAAYjF,EAASe,QAASiE,eAAe,KAG7DgG,EAAK1J,SAAS,CAAE2D,WAAYjF,EAASe,QAASiE,eAAe,KAElE,SAAC7E,GACAD,QAAQQ,IAAIP,GACZ6K,EAAK1J,SAAS,CAAE2D,WAAY9E,EAAO6E,eAAe,uCAIjD9D,GAAO,IAAAC,EACZhH,KAAKmH,UAALH,EAAA,GAAAlH,OAAAsH,EAAA,EAAAtH,CAAAkH,EAAiBD,EAAMM,OAAOC,KAAOP,EAAMM,OAAOE,OAAlDzH,OAAAsH,EAAA,EAAAtH,CAAAkH,EAAA,aAAqE,MAArEA,iDAKA,OACItF,EAAAC,EAAAC,cAAA,OAAKO,MAAM,gCACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,OACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,yCACPT,EAAAC,EAAAC,cAAA,0CAEJF,EAAAC,EAAAC,cAAA,OAAKO,MAAM,6CACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,4BACPT,EAAAC,EAAAC,cAAA,QAAMO,MAAM,oCAAoCmG,SAAUtI,KAAK8U,cAAclS,KAAK5C,OAC9E0B,EAAAC,EAAAC,cAAA,OAAKO,MAAM,cACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,aAAX,aACAxQ,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOpG,MAAM,eAAemF,KAAK,WAAWR,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAMiM,SAAU1K,YAAY,YAAYC,UAAQ,IACxJ/G,EAAAC,EAAAC,cAAA,SAAO+G,GAAG,YAAYxG,MAAM,wBAA5B,gCAEJT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,eACPT,EAAAC,EAAAC,cAAA,SAAOsQ,IAAI,UAAX,gBACAxQ,EAAAC,EAAAC,cAAA,SAAO2G,KAAK,OAAOjB,KAAK,aAAanF,MAAM,eAAe2E,SAAU9G,KAAK8G,SAASlE,KAAK5C,MAAOuH,MAAOvH,KAAKiH,MAAMkM,WAAY3K,YAAY,gFAAgFC,UAAQ,KAEpO/G,EAAAC,EAAAC,cAAA,UAAQ2G,KAAK,SAASpG,MAAM,sBAA5B,qDAWd4E,GAAO,IAAAgO,EAAA/U,KACjB+G,EAAMkD,iBACN,IAAImJ,EAAQpT,KAAKiH,MAAMkM,WAAWrB,MAAM,KAAKxG,IAAI,SAAC+H,GAC9C,IAAI2B,EAAO3B,EAAKvB,MAAM,KACtB,MAAO,CACHzP,KAAQ2S,EAAK,GACbzU,MAASyU,EAAK,GAAGhD,UAGrBpF,EAAM,CACNrM,MAASP,KAAKqB,KAAKd,MACnBuE,UAAa9E,KAAKgB,MAAMuQ,SAAStK,MAAMnC,UACvCoO,SAAYlT,KAAKiH,MAAMiM,SACvB+B,YAAe7B,GAEnB7O,EAAW1B,cAAcqS,kBAAkBtI,EAAK,SAAC/G,GAC7CE,QAAQQ,IAAIV,GACRA,EAASpB,SACTsQ,EAAKvD,oBAAoBuD,EAAK/T,MAAMuQ,SAAStK,MAAMnC,UAAW,UAC9DiQ,EAAK5N,SAAS,CAAE2D,WAAYjF,EAASe,QAASiE,eAAe,KAG7DkK,EAAK5N,SAAS,CAAE2D,WAAYjF,EAASe,QAASiE,eAAe,KAElE,SAAC7E,GACAD,QAAQQ,IAAIP,GACZ+O,EAAK5N,SAAS,CAAE2D,WAAY9E,EAAO6E,eAAe,aAhUjB5H,cCCxBkS,UAFT1K,EAAQ,gBAIhB,SAAA0K,EAAYnU,GAAO,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAmV,IACflU,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAAqV,GAAA/T,KAAApB,KAAMgB,KACDiG,MAAQ,CACT0D,aAAa,EACbC,WAAY,GACZC,cAAe,KACfC,WAAY,MAEhB7J,EAAKI,KAAOC,KAAKC,MAAMC,aAAaC,QAAQzC,EAAaK,eAR1C4B,mFAYfjB,KAAK+K,aAAa,8CAGT1I,GAAM,IAAA0F,EAAA/H,KACfuE,EAAW1B,cAAckI,aAAa1I,EAAM,SAACwD,GACzCE,QAAQQ,IAAIV,GACTA,EAASpB,SACRsD,EAAKZ,SAAS,CAACyD,WAAW/E,EAASmF,WAExC,SAAChF,GACAD,QAAQQ,IAAIP,GACZ+B,EAAKZ,SAAS,CAAC0D,eAAc,EAAOC,WAAW9E,sDAKnD,GAAIhG,KAAKiH,MAAM6D,WACX,OACIpJ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,QAAQN,UAAW7B,KAAKiH,MAAM4D,cAAgB,gBAAkB,eAAgBxI,KAAK,SAC3FrC,KAAKiH,MAAM6D,6CAQxB,IAAI9C,EAAc,KAIlB,OAHKxG,aAAaC,QAAQzC,EAAaG,cACnC6I,EAActG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAUlG,GAAG,OAG3BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVmG,EACDtG,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACV7B,KAAKiL,yBAEVvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV7B,KAAKkL,8DAMJ,IAAAlC,EAAAhJ,KACVoL,EAAQ,GACZ,OAAmC,GAAhCpL,KAAKiH,MAAM2D,WAAWS,OAEjB3J,EAAAC,EAAAC,cAAA,oDAIJ5B,KAAKiH,MAAM2D,WAAWU,IAAI,SAACC,EAAMC,GAC7BJ,EAAMpI,KACEtB,EAAAC,EAAAC,cAAA,OAAKO,MAAM,uCAAuCO,QAAS,WAAKsG,EAAKyC,YAAYF,EAAKzG,aAClFpD,EAAAC,EAAAC,cAAA,OAAKO,MAAM,aACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,OACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,iDACPT,EAAAC,EAAAC,cAAA,MAAIO,MAAM,cAAcoJ,EAAKzG,WAC7BpD,EAAAC,EAAAC,cAAA,KAAGO,MAAM,8CAA8CoJ,EAAKG,cAEhEhK,EAAAC,EAAAC,cAAA,OAAKO,MAAM,iCACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,oBAAZ,eAAkD,IAAIwJ,KAAKJ,EAAKK,WAAWC,gBAC9EnK,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,oBAAZ,aAAgD,IAAIwJ,KAAKJ,EAAKO,SAASD,gBAC1EnK,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,oBAAZ,eAAkDoJ,EAAKQ,YAAc,OAASR,EAAKS,YAAa,YACnGtK,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,oBAAZ,uBAA0DoJ,EAAKU,wBAOvFb,uCAIHtG,GACRjE,EAAQmC,KAAK,UAAU,CAAC8B,UAAUA,EAAWzC,KAAK,iBA5FjBY,cCFnCmP,UAAc3H,EAAQ,MAGP2K,GAFT3K,EAAQ,gBAIhB,SAAA2K,EAAYpU,GAAO,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAoV,IACfnU,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAAsV,GAAAhU,KAAApB,KAAMgB,KACDiG,MAAQ,CACT0D,aAAa,EACb0K,OAAQ,GACRxK,cAAe,KACfC,WAAY,KACZhG,UAAW,IAPA7D,mFAYf,IAAI0R,EAAQP,EAAY7Q,MAAMmR,OAAOnB,SAAS5E,QAC3CgG,EAAM7N,WACL9E,KAAKqM,eAAesG,EAAM7N,kDAInBA,GAAW,IAAAiD,EAAA/H,KACtBuE,EAAW1B,cAAcyS,iBAAiBxQ,EAAW,SAACe,GAClDE,QAAQQ,IAAIV,GACRA,EAASpB,QACTsD,EAAKZ,SAAS,CAACkO,OAAOxP,EAASwP,SAG/BtN,EAAKZ,SAAS,CAAE0D,eAAe,EAAOC,WAAYjF,EAASe,WAEhE,SAACZ,GACAD,QAAQQ,IAAIP,GACZ+B,EAAKZ,SAAS,CAAE0D,eAAe,EAAOC,WAAY9E,sDAKtD,GAAIhG,KAAKiH,MAAM6D,WACX,OACIpJ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,QAAQN,UAAW7B,KAAKiH,MAAM4D,cAAgB,gBAAkB,eAAgBxI,KAAK,SAC3FrC,KAAKiH,MAAM6D,6CAQxB,IAAI9C,EAAc,KAIlB,OAHKxG,aAAaC,QAAQzC,EAAaG,cACnC6I,EAActG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAUlG,GAAG,OAG3BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACVmG,EACDtG,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACV7B,KAAKiL,yBAEVvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV7B,KAAKuV,kEAUlB,OAFAxP,QAAQQ,IAAIvG,KAAKiH,MAAMoO,QAGnB3T,EAAAC,EAAAC,cAAA,OAAKO,MAAM,aACPT,EAAAC,EAAAC,cAAA,UAAK5B,KAAKiH,MAAMnC,UAAY,kBAC5BpD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOO,MAAM,yBACTT,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,qBAGRF,EAAAC,EAAAC,cAAA,aAEQ5B,KAAKiH,MAAMoO,OAAO/J,IAAI,SAAC+H,EAAM7H,GACzB,OAAiB,GAAb6H,EAAKmC,KAED9T,EAAAC,EAAAC,cAAA,MAAIiS,IAAKrI,EAAOU,MAAO,CAAEuJ,gBAAiB,UAAWC,WAAY,SAC7DhU,EAAAC,EAAAC,cAAA,UAAKyR,EAAKmC,MACV9T,EAAAC,EAAAC,cAAA,UAAKyR,EAAKH,UACVxR,EAAAC,EAAAC,cAAA,MAAIsK,MAAO,CAACC,UAAU,YACjBkH,EAAK4B,YAAY3J,IAAI,SAAChE,GACnB,OACI5F,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,2BAA2B+J,MAAO,CAACyJ,SAAS,OAAQC,YAAY,SAAgBtO,EAAK/G,UAIhHmB,EAAAC,EAAAC,cAAA,UAAKyR,EAAKW,QAIA,GAAbX,EAAKmC,KAEN9T,EAAAC,EAAAC,cAAA,MAAIiS,IAAKrI,EAAOU,MAAO,CAAEuJ,gBAAiB,UAAWC,WAAY,SAC7DhU,EAAAC,EAAAC,cAAA,UAAKyR,EAAKmC,MACV9T,EAAAC,EAAAC,cAAA,UAAKyR,EAAKH,UACVxR,EAAAC,EAAAC,cAAA,MAAIsK,MAAO,CAACC,UAAU,YACjBkH,EAAK4B,YAAY3J,IAAI,SAAChE,GACnB,OACI5F,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,2BAA2B+J,MAAO,CAACyJ,SAAS,OAAQC,YAAY,SAAgBtO,EAAK/G,UAIhHmB,EAAAC,EAAAC,cAAA,UAAKyR,EAAKW,QAIA,GAAbX,EAAKmC,KAEN9T,EAAAC,EAAAC,cAAA,MAAIiS,IAAKrI,EAAOU,MAAO,CAAEuJ,gBAAiB,UAAWC,WAAY,SAC7DhU,EAAAC,EAAAC,cAAA,UAAKyR,EAAKmC,MACV9T,EAAAC,EAAAC,cAAA,UAAKyR,EAAKH,UACVxR,EAAAC,EAAAC,cAAA,MAAIsK,MAAO,CAACC,UAAU,YACjBkH,EAAK4B,YAAY3J,IAAI,SAAChE,GACnB,OACI5F,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,2BAA2B+J,MAAO,CAACyJ,SAAS,OAAQC,YAAY,SAAgBtO,EAAK/G,UAIhHmB,EAAAC,EAAAC,cAAA,UAAKyR,EAAKW,QAMdtS,EAAAC,EAAAC,cAAA,MAAIiS,IAAKrI,GACL9J,EAAAC,EAAAC,cAAA,UAAKyR,EAAKmC,MACV9T,EAAAC,EAAAC,cAAA,UAAKyR,EAAKH,UACVxR,EAAAC,EAAAC,cAAA,MAAIsK,MAAO,CAACC,UAAU,YACjBkH,EAAK4B,YAAY3J,IAAI,SAAChE,GACnB,OACI5F,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,2BAA2B+J,MAAO,CAACyJ,SAAS,OAAQC,YAAY,SAAgBtO,EAAK/G,UAIhHmB,EAAAC,EAAAC,cAAA,UAAKyR,EAAKW,iDAatClP,GACRjE,EAAQmC,KAAK,UAAW,CAAE8B,UAAWA,EAAWzC,KAAM,iBA/JrBY,cCDpB4S,UAFTpL,EAAQ,gBAGhB,SAAAoL,EAAY7U,GAAO,IAAAC,EAAA,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAA6V,IACf5U,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAE,KAAAF,OAAAqB,EAAA,EAAArB,CAAA+V,GAAAzU,KAAApB,KAAMgB,KACDiG,MAAQ,CACT0D,aAAa,EACb/F,QAAS,KACTiG,cAAe,KACfC,WAAY,MAEhB7J,EAAKI,KAAOC,KAAKC,MAAMC,aAAaC,QAAQzC,EAAaK,eAR1C4B,mFAYfjB,KAAKmH,SAAS,CAAEvC,QAAS5E,KAAKgB,MAAMuQ,SAAStK,MAAMrC,0DAInD,GAAI5E,KAAKiH,MAAM6D,WACX,OACIpJ,EAAAC,EAAAC,cAAA,OAAKO,MAAM,QAAQN,UAAW7B,KAAKiH,MAAM4D,cAAgB,gBAAkB,eAAgBxI,KAAK,SAC3FrC,KAAKiH,MAAM6D,6CAOxB,IAAI9C,EAAc,KAIlB,OAHKxG,aAAaC,QAAQzC,EAAaG,cACnC6I,EAActG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAUlG,GAAG,OAG3BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACVmG,EACDtG,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACV7B,KAAKiL,yBAEVvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACV7B,KAAKiH,MAAMrC,QAAU5E,KAAKwT,gBAAkB,MAEjD9R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWqK,MAAO,CAAE4J,YAAa,sBAC3C9V,KAAKiH,MAAMrC,QAAU5E,KAAK+V,cAAgB,MAE/CrU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV7B,KAAKiH,MAAMrC,QAAU5E,KAAKgW,gBAAkB,gDAQ7D,OACItU,EAAAC,EAAAC,cAAA,OAAKO,MAAM,6BACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,2CACPT,EAAAC,EAAAC,cAAA,UAAK5B,KAAKiH,MAAMrC,QAAQE,UAAY,sBAExCpD,EAAAC,EAAAC,cAAA,OAAKO,MAAM,2CACPT,EAAAC,EAAAC,cAAA,OAAKO,MAAM,MAAM+J,MAAO,CAAEC,UAAW,WACjCzK,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,+BAAgF,IAAMnC,KAAKiH,MAAMrC,QAAQqR,0BAEhHvU,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,2BAA4E,IAAMnC,KAAKiH,MAAMrC,QAAQsR,qBAE5GxU,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,mBAAoE,IAAMnC,KAAKiH,MAAMrC,QAAQuR,gBAEpGzU,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,mBAAoE,IAAMnC,KAAKiH,MAAMrC,QAAQwR,eAEpG1U,EAAAC,EAAAC,cAAA,OAAKO,MAAM,YACPT,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMO,MAAM,kCAAZ,YAA6D,IAAMnC,KAAKiH,MAAMrC,QAAQyR,kDAQnG,IAAAtO,EAAA/H,KACNoL,EAAQ,GAaZ,OAZApL,KAAKiH,MAAMrC,QAAQwO,MAAM9H,IAAI,SAAC+H,EAAM7H,GAChCJ,EAAMpI,KACFtB,EAAAC,EAAAC,cAACoO,EAAArO,EAAD,CAAasO,QACTvO,EAAAC,EAAAC,cAAA,OAAKsK,MAAO,CAAEoK,QAAS,OAAQC,eAAgB,gBAAiBX,YAAa,MAAOY,WAAY,WAC5F9U,EAAAC,EAAAC,cAAA,UAAKyR,EAAKH,UACVxR,EAAAC,EAAAC,cAAA,MAAIsK,MAAOmH,EAAKmB,QAAU,CAAEiC,MAAO,QAAW,CAAEA,MAAO,MAAOb,YAAa,SAAWvC,EAAKmB,QAAU,mBAAqB,qBAG7HzM,EAAK2O,uBAAuBrD,OAKrC3R,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAK,iBACLF,EAAAC,EAAAC,cAAA,WACCwJ,2CAKG,IAAApC,EAAAhJ,KACZ,OACI0B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAK,YACLF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOO,MAAM,yBACTT,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,aAEQ5B,KAAKiH,MAAMrC,QAAQ+R,SAASrL,IAAI,SAACsL,EAASpL,GACtC,OACI9J,EAAAC,EAAAC,cAAA,MAAIiS,IAAKrI,GACL9J,EAAAC,EAAAC,cAAA,UAAKgV,EAAQ/J,OACbnL,EAAAC,EAAAC,cAAA,UAAKgV,EAAQlL,aACbhK,EAAAC,EAAAC,cAAA,UAAKoH,EAAK6N,WAAW,IAAIlL,KAAKiL,EAAQE,iBACtCpV,EAAAC,EAAAC,cAAA,UAAK,IAAMgV,EAAQ9J,6DAYhCuG,GAAM,IAAArJ,EAAAhK,KACzB,OACI0B,EAAAC,EAAAC,cAAA,SAAOO,MAAM,yBACTT,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,aAEQyR,EAAK4B,YAAY3J,IAAI,SAACyL,EAAQvL,GAC1B,OACI9J,EAAAC,EAAAC,cAAA,MAAIiS,IAAKrI,GACL9J,EAAAC,EAAAC,cAAA,UAAKmV,EAAOxW,OACZmB,EAAAC,EAAAC,cAAA,UAAMmV,EAAOC,KAAO,IAAMD,EAAOE,WAAa,OAC9CvV,EAAAC,EAAAC,cAAA,UAAKmV,EAAOC,KAAOhN,EAAK6M,WAAW,IAAIlL,KAAKoL,EAAOG,gBAAkB,OACrExV,EAAAC,EAAAC,cAAA,UAAKmV,EAAOC,KAAO,OAAS,kDAWjDG,GACP,IAAIC,EAAQD,EAAKE,WACbC,EAAUH,EAAKI,aACfC,EAAOJ,GAAS,GAAK,KAAO,KAI5BK,GAFJL,GADAA,GAAgB,KACQ,IAEF,KADtBE,EAAUA,EAAU,GAAK,IAAIA,EAAUA,GACD,IAAME,EAC5C,OAAOL,EAAKO,WAAW,EAAI,IAAMP,EAAKQ,UAAY,IAAMR,EAAKS,cAAgB,KAAOH,SAjL/CxU,cCyB9B4U,mLAnBP,OACInW,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAO6P,OAAK,EAACtS,KAAK,IAAIuS,UAAWlR,IACjCnF,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOzC,KAAK,aAAauS,UAAWrN,IACpChJ,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOzC,KAAK,aAAauS,UAAWnK,IACpClM,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOzC,KAAK,kBAAkBuS,UAAWrI,IACzChO,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOzC,KAAK,mBAAmBuS,UAAWjH,IAC1CpP,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOzC,KAAK,WAAWuS,UAAW1F,IAClC3Q,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOzC,KAAK,UAAUuS,UAAW/E,IACjCtR,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOzC,KAAK,eAAeuS,UAAW5C,IACtCzT,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOzC,KAAK,eAAeuS,UAAW3C,IACtC1T,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAOzC,KAAK,mBAAmBuS,UAAWlC,YAdvC5S,aCMJ+U,mLAVX,OAEEtW,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAQpH,QAASA,GAEba,EAAAC,EAAAC,cAACqW,EAAD,cANQhV,aCKEiV,QACW,cAA7BxF,OAAOnB,SAAS4G,UAEe,UAA7BzF,OAAOnB,SAAS4G,UAEhBzF,OAAOnB,SAAS4G,SAASC,MACvB,2DCZNC,IAASC,OACL5W,EAAAC,EAAAC,cAAC2W,EAAD,MACAC,SAASC,eAAe,SDyHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9V,KAAK,SAAA+V,GACjCA,EAAaC","file":"static/js/main.8f71687c.chunk.js","sourcesContent":["const AppConstants = {\n    USER_ROLE_HACKER : \"Hacker\",\n    USER_ROLE_ADMIN: \"Admin\",\n    AUTH_TOKEN:\"user_auth_token\",\n    USER_FIREBASE_DETAILS:\"user_firebase_details\",\n    USER_DETAILS:\"user_details\",\n};\nexport default AppConstants;","import app from 'firebase/app';\nimport 'firebase/auth';\n\nconst config = {\n  apiKey: \"AIzaSyAx1YRQ9IAl8rlAMmhnj8IS_0Msz2C6ios\",\n  authDomain: \"cmpe-256-open-hack.firebaseapp.com\",\n  databaseURL: \"https://cmpe-256-open-hack.firebaseio.com\",\n  projectId: \"cmpe-256-open-hack\",\n  storageBucket: \"cmpe-256-open-hack.appspot.com\",\n  messagingSenderId: \"335943792546\"\n};\n\nexport default class Firebase {\n\n  static instance = null;\n\n  /** Singleton Pattern\n    * @returns {Firebase}\n    */\n  static getInstance() {\n    if (Firebase.instance == null) {\n      Firebase.instance = new Firebase();\n    }\n    return this.instance;\n  }\n\n  constructor() {\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n  }\n\n\n\n  signUp(email, password){\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  login(email, password){\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  signOut(){\n    return this.auth.signOut();\n  }\n  \n  signInWithGoogle(){\n    return this.auth.signInWithPopup(this.googleProvider);\n  }\n\n  // doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  // doPasswordUpdate = password =>\n  //   this.auth.currentUser.updatePassword(password);\n   \n}\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import React, { Component, Fragment } from 'react';\nimport './Navbar.css';\nimport { Link } from 'react-router-dom';\nimport AppConstants from '../../constants/AppConstants';\nimport Firebase from '../../services/FirebaseService';\nimport { history } from '../../router/history';\n//create the Navbar Component\nclass Navbar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.user = JSON.parse(localStorage.getItem(AppConstants.USER_DETAILS));\n    }\n\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar-expand-sm bg-color navbar-dark\">\n                    <div className=\"container-fluid\">\n                        <div className=\"navbar-header\">\n                            <Link to=\"/dashboard\"> <span className=\"navbar-brand header-white\">Open Hack</span></Link>\n                        </div>\n                        <div className=\"navbar-fixed-right\">\n                            {this.renderMenu()}\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n    renderMenu() {\n        if (localStorage.getItem(AppConstants.AUTH_TOKEN)) {\n            return (\n                <Fragment>\n                   { !this.user.admin ?\n                       <div class=\"nav-item item-link\">\n                            <Link to=\"/myJudgement\"><a class=\"nav-link\">My Judgements</a></Link>\n                        </div>\n                        : null\n                    }\n                    <div class=\"nav-item item-link\">\n                        <Link to=\"/myOrganization\"><a class=\"nav-link\">My Organizations</a></Link>\n                    </div>\n                    <div class=\"nav-item dropdown pull-right\">\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                            <span class=\"glyphicon glyphicon-user\"></span>\n                        </a>\n                        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                            <Link to=\"/myProfile\"><span class=\"dropdown-item\">My Profile</span></Link>\n                            <br /><br />\n                            <span class=\"dropdown-item\" onClick={this.logout.bind(this)}>Logout</span>\n                        </div>\n                    </div>\n                </Fragment>\n            );\n        }\n    }\n\n    logout() {\n        Firebase.getInstance().signOut().then(() => {\n            localStorage.clear();\n            history.push('/');\n        });\n    }\n}\n\n\n// <br /><br /><Link to=\"/viewProfile\"><span class=\"dropdown-item\">My Profile</span></Link><br />\n// <br /><Link to=\"/inbox\"><span class=\"dropdown-item\">Inbox</span></Link><br /><br />\n\nexport default Navbar;","const URI = {\n//  BASE_URL : \"http://10.0.0.104:8080\",\n//  BASE_URL : \"http://localhost:8080\",\n//  BASE_URL : \"http://10.0.0.196:8080\",\n//  BASE_URL: \"http://10.0.0.87:8080\",\n    BASE_URL: \"http://ec2-18-222-232-226.us-east-2.compute.amazonaws.com:8080\",\n    LOOKUP_SCREEN_NAME: \"/lookupScreenName\",\n    SIGNUP: \"/signup\",\n    GET_PROFILE: \"/getProfile\",\n    UPDATE_PROFILE: \"/updateProfile\",\n    SEARCH_ORGANIZATION: \"/searchOrganizations\",\n    CREATE_ORGANIZATION: \"/createOrganization\",\n    GET_LIST_ORGANIZATION: \"/listRequestOrganization\",\n    RESPOND_REQUEST: \"/respondRequestOrganizaion\",\n    CREATE_UPDATE_HACKATHON: \"/createUpdateHackathon\",\n    FETCH_PRICE: \"/fetchPrice\",\n    LIST_HACKATHON: \"/listHackathon\",\n    DETAIL_HACKATHON: \"/detailHackathon\",\n    MAKE_PAYMENT: \"/makePayment\",\n    REGISTER_HACKATHON: \"/registerHackathon\",\n    SUBMIT_HACKATHON: \"/submitCode\",\n    SAVE_GRADES:\"/grade\",\n    GET_LEADERBOARD: \"/leaderBoard\",\n    GET_FINANCIAL_REPORT:\"/financialReport\",\n    ADD_EXPENSE:\"/addExpense\"\n};\nexport default URI;","import AxiosService from \"./AxiosService\";\nimport URI from \"../constants/uri\"\nimport AppConstants from \"../constants/AppConstants\";\n\nexport default class WebService extends AxiosService {\n\n    static instance = null;\n\n    constructor() {\n        super();\n    }\n\n    /** Singleton Patter\n    * @returns {WebService}\n    */\n    static getInstance() {\n        if (WebService.instance == null) {\n            WebService.instance = new WebService();\n        }\n        return this.instance;\n    }\n\n    /**\n    * Screen Name Lookup Call - User login api call\n    * Takes success and failure operations\n    *\n    * Required params: screenName\n    */\n    screenNameLookup(screenName, success, failure) {\n        this.getCall(URI.LOOKUP_SCREEN_NAME + '/?screenName=' + screenName, success, failure, false);\n    }\n\n    /**\n    * SignUp Call - User SignUp api call\n    * Takes success and failure operations\n    *\n    * Required params: Name, email, screenName in detail object.\n    */\n    signUp(details, success, failure) {\n        this.postCall(URI.SIGNUP, details, success, failure, false);\n    }\n\n    /**\n    * Get Profile Call - Get Profile api call\n    * Takes success and failure operations\n    *\n    * Required params: null\n    */\n    getProfile(success, failure) {\n        let user = JSON.parse(localStorage.getItem(AppConstants.USER_FIREBASE_DETAILS));\n        this.getCall(URI.GET_PROFILE + '/?email=' + user.email, success, failure, true);\n    }\n\n    /**\n    * Get Hackathon Call - Get Hackathon api call\n    * Takes success and failure operations\n    *\n    * Required params: null\n    */\n    getHackathon(role, success, failure) {\n        let user = JSON.parse(localStorage.getItem(AppConstants.USER_FIREBASE_DETAILS));\n        this.getCall(URI.LIST_HACKATHON + '/?email=' + user.email + '&role=' + role, success, failure, true);\n    }\n\n    /**\n   * Get Hackathon Call - Get Hackathon api call\n   * Takes success and failure operations\n   *\n   * Required params: null\n   */\n    getHackathonDetail(eventName, role, success, failure) {\n        let user = JSON.parse(localStorage.getItem(AppConstants.USER_FIREBASE_DETAILS));\n        this.getCall(URI.DETAIL_HACKATHON + '/?email=' + user.email + '&role=' + role + '&eventName=' + eventName, success, failure, true);\n    }\n\n    /**\n    * Get Organization List Call - Get Profile api call\n    * Takes success and failure operations\n    *\n    * Required params: null\n    */\n    getOrganizationList(success, failure) {\n        let user = JSON.parse(localStorage.getItem(AppConstants.USER_FIREBASE_DETAILS));\n        this.getCall(URI.GET_LIST_ORGANIZATION + '/?email=' + user.email, success, failure, true);\n    }\n\n    /**\n    * Search Organizations Call - Search Organizations api call\n    * Takes success and failure operations\n    *\n    * Required params: null\n    */\n    searchOrganization(success, failure) {\n        this.getCall(URI.SEARCH_ORGANIZATION + '/?name=' + \"\", success, failure, true);\n    }\n\n    /**\n   * Search Organizations Call - Search Organizations api call\n   * Takes success and failure operations\n   *\n   * Required params: null\n   */\n    fetchEventPrice(email, eventName, success, failure) {\n        this.getCall(URI.FETCH_PRICE + '/?email=' + email + \"&eventName=\" + eventName, success, failure, true);\n    }\n\n    /**\n    * Update User Profile Call - Update User Profile api call\n    * Takes success and failure operations\n    *\n    * Required params: null\n    */\n    updateProfile(details, success, failure) {\n        this.postCall(URI.UPDATE_PROFILE, details, success, failure, true);\n    }\n\n    /**\n    * Create Organization Call - Create Organizationapi call\n    * Takes success and failure operations\n    *\n    * Required params: Name, Address, Description\n    */\n    createOrganization(details, success, failure) {\n        this.postCall(URI.CREATE_ORGANIZATION, details, success, failure, true);\n    }\n\n    /**\n   * Respond Organization Request Call - Respond Organization Request api call\n   * Takes success and failure operations\n   *\n   * Required params: email, isApproved\n   */\n    respondRequest(details, success, failure) {\n        this.postCall(URI.RESPOND_REQUEST, details, success, failure, true);\n    }\n\n    /**\n   * Create Update Hackathon Request Call - Create Update Hackathon Request api call\n   * Takes success and failure operations\n   *\n   * Required params:\n   */\n    createUpdateHackathon(details, success, failure) {\n        this.postCall(URI.CREATE_UPDATE_HACKATHON, details, success, failure, true);\n    }\n\n    /**\n   * Create Update Hackathon Request Call - Create Update Hackathon Request api call\n   * Takes success and failure operations\n   *\n   * Required params:\n   */\n    makePayment(details, success, failure) {\n        this.postCall(URI.MAKE_PAYMENT, details, success, failure, true);\n    }\n\n    /**\n  * Create Update Hackathon Request Call - Create Update Hackathon Request api call\n  * Takes success and failure operations\n  *\n  * Required params:\n  */\n    registerHackathon(details, success, failure) {\n        this.postCall(URI.REGISTER_HACKATHON, details, success, failure, true);\n    }\n\n    /**\n* Create Update Hackathon Request Call - Create Update Hackathon Request api call\n* Takes success and failure operations\n*\n* Required params:\n*/\n    submitHackathon(details, success, failure) {\n        this.postCall(URI.SUBMIT_HACKATHON, details, success, failure, true);\n    }\n\n    saveHackathonGrade(details, success, failure) {\n        this.postCall(URI.SAVE_GRADES, details, success, failure, true);\n    }\n\n    addExpense(details, success, failure) {\n        this.postCall(URI.ADD_EXPENSE, details, success, failure, true);\n    }\n\n    fetchLeaderBoard(eventName, success, failure) {\n        this.getCall(URI.GET_LEADERBOARD + \"?eventName=\" + eventName, success, failure, true);\n    }\n\n    fetchFinancialReport(email, eventName, success, failure) {\n        this.getCall(URI.GET_FINANCIAL_REPORT + \"?email=\" + email + \"&eventName=\" + eventName, success, failure, true);\n    }\n\n\n}","import axios from 'axios';\nimport URI from \"../constants/uri\";\nimport AppConstants from \"../constants/AppConstants\";\nimport { history } from '../router/history';\nclass AxiosService {\n    constructor() { }\n\n    api = axios.create({\n        baseURL: URI.BASE_URL,\n        timeout: 10000,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n\n    async postCall(path, details, success, failure, isAuthorized = false) {\n        let config;\n        if (isAuthorized) {\n            let token = localStorage.getItem(AppConstants.AUTH_TOKEN);\n            config = { headers: { 'Authorization': (token ? token : {}) }, withCredentials: true };\n        }\n        else {\n            config = { withCredentials: true };\n        }\n        try {\n            const response = await this.api.post(path, details, config);\n            success(this.handleResponse(response));\n        }\n        catch (err) {\n            console.error(err);\n            failure(this.handleError(err));\n        }\n    }\n\n    async getCall(path, success, failure, isAuthorized = false) {\n        let config;\n        if (isAuthorized) {\n            let token = localStorage.getItem(AppConstants.AUTH_TOKEN);\n            config = { headers: { 'Authorization': (token ? token : {}) }, withCredentials: true };\n        }\n        else {\n            config = { withCredentials: true, crossDomain: true };\n        }\n        try {\n            const response = await this.api.get(path, config);\n            success(this.handleResponse(response));\n        }\n        catch (err) {\n            console.error(err);\n            failure(this.handleError(err));\n        }\n    }\n\n    async deleteCall(path, details = null, success, failure, isAuthorized = false) {\n        let config;\n        if (isAuthorized) {\n            let token = localStorage.getItem(AppConstants.AUTH_TOKEN);\n            config = { headers: { 'Authorization': (token ? token : {}) }, withCredentials: true };\n        }\n        else {\n            config = { withCredentials: true };\n        }\n        console.log(config);\n        try {\n            const response = await this.api.delete(path, details, config);\n            success(this.handleResponse(response));\n        }\n        catch (err) {\n            console.error(err);\n            failure(this.handleError(err));\n        }\n    }\n\n    handleResponse(response) {\n        if (response.data) {\n            return response.data;\n        }\n        return response;\n    }\n\n\n    handleError(error) {\n        if (error.response && error.response.status === 401) {\n            localStorage.clear();\n            history.push('/');\n        }\n        if (error.response) {\n            const errorMessage = (error.response.data && error.response.data.message) || error.message;\n            return errorMessage;\n        }\n        return error.message;\n    }\n}\nexport default AxiosService;\n\n\n\n\n\n\n","import React, { Component, Fragment } from 'react';\nimport './Home.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport AppConstants from \"../../constants/AppConstants\";\nimport Navbar from '../Navbar/Navbar';\nimport Firebase from '../../services/FirebaseService';\nimport { history } from '../../router/history';\nimport WebService from '../../services/WebService';\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: '',\n            username: '',\n            isLoginMode: true,\n            loginFailed: false,\n            errorMessage: null\n        };\n        this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\n        this.handleSignupSubmit = this.handleSignupSubmit.bind(this);\n        this.handleGoogleLogin = this.handleGoogleLogin.bind(this);\n    }\n\n    onChange = (event) => {\n        if (this.state.loginFailed) {\n            this.setState({ [event.target.name]: event.target.value, loginFailed: false });\n        }\n        else {\n            this.setState({ [event.target.name]: event.target.value });\n        }\n    }\n\n    renderFailedLogin() {\n        if (this.state.loginFailed) {\n            return (\n                <div class=\"alert alert-danger\" role=\"alert\">\n                    {this.state.errorMessage}\n                </div>\n            );\n        }\n    }\n\n    // samsetional74@SpeechGrammarList.com\n    // SamSham46\n\n    render() {\n        let redirectVar = null;\n        if (localStorage.getItem(AppConstants.AUTH_TOKEN)) {\n            redirectVar = <Redirect to=\"/dashboard\" />\n        }\n        return (\n            <div className=\"container login\">\n                {redirectVar}\n                <Navbar></Navbar>\n                <div className=\"row login-main\">\n                    {this.renderFailedLogin()}\n                    <div className=\"loginContainer\">\n                        <h1>Open Hack</h1>\n                        <h4 onClick={() => { this.setState({ isLoginMode: !this.state.isLoginMode }) }}>{this.state.isLoginMode ? 'Need a account?' : 'Already have an account?'} <a>{this.state.isLoginMode ? 'SignUp' : 'Login'}</a></h4>\n                        <div className=\"formContainer\">\n                            <div class=\"formHeader\">\n                                <span className=\"formHeading\">{this.state.isLoginMode ? 'Account Login' : 'Signup'}</span>\n                            </div>\n                            {this.state.isLoginMode ? this.renderLogin() : this.renderSignup()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderLogin() {\n        return (\n            <Fragment>\n                <form onSubmit={this.handleLoginSubmit}>\n                    <div class=\"form-group\">\n                        <input type=\"email\" class=\"form-control form-control-lg\" onChange={this.onChange} name=\"username\" placeholder=\"Email Address\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"password\" class=\"form-control form-control-lg\" onChange={this.onChange} name=\"password\" placeholder=\"Password\" minLength=\"5\" required />\n                    </div>\n                    <div class=\"form-group\"><a href=\"#\">Forget Password ?</a></div>\n                    <div class=\"form-check form-check-inli1ne\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"keepSignIn\" value=\"\" />   Keep me signed in\n                    </div>\n                    <br />\n                    <button type=\"submit\" class=\"btn btn-success btn-lg btn-block\">Login</button>\n                </form>\n                <button type=\"button\" class=\"google-button\" onClick={this.handleGoogleLogin}>\n                    <span class=\"google-button__icon\">\n                        <svg viewBox=\"0 0 366 372\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z\" id=\"Shape\" fill=\"#EA4335\" /><path d=\"M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z\" id=\"Shape\" fill=\"#FBBC05\" /><path d=\"M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z\" id=\"Shape\" fill=\"#4285F4\" /><path d=\"M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z\" fill=\"#34A853\" /></svg>\n                    </span>\n                    <span class=\"google-text\">Sign in with Google</span>\n                </button>\n            </Fragment>\n        );\n    }\n\n    renderSignup() {\n        return (\n            <form onSubmit={this.handleSignupSubmit}>\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control form-control-lg\" onChange={this.onChange} name=\"name\" placeholder=\"Name\" required />\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control form-control-lg\" onChange={this.onChange} name=\"screenName\" placeholder=\"Screen Name\" required />\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"email\" class=\"form-control form-control-lg\" onChange={this.onChange} name=\"email\" placeholder=\"Email address\" required />\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" class=\"form-control form-control-lg\" onChange={this.onChange} name=\"password\" placeholder=\"Password\" required minLength=\"6\" />\n                </div>\n                <button type=\"submit\" class=\"btn btn-success btn-lg btn-block\">Sign Me Up</button>\n            </form>\n        );\n\n    }\n\n    handleGoogleLogin() {\n        Firebase.getInstance().signInWithGoogle().then(socialAuthUser => {\n            console.log(socialAuthUser);\n            if (socialAuthUser.additionalUserInfo.isNewUser) {\n                socialAuthUser.user.sendEmailVerification();\n                // Server Signup\n                WebService.getInstance().signUp({email:socialAuthUser.user.email, screenName: socialAuthUser.user.email, name:socialAuthUser.user.displayName}, (response) => {\n                    console.log(response);\n                    if(response.success){\n                        alert('Sign Up Successfully. Please verify email and then login.');\n                    }\n                }, (error) => {\n                    console.log(error);\n                    this.setState({ errorMessage: error.message, loginFailed: true })\n                })\n            }\n            // To be handle later on\n            else if (!socialAuthUser.user.emailVerified) {\n                this.setState({ errorMessage: 'Please Verify Email First!', loginFailed: true });\n            }\n            else {\n                // localStorage.setItem(AppConstants.AUTH_TOKEN, socialAuthUser.credential.idToken);\n                // localStorage.setItem(AppConstants.USER_DETAILS, JSON.stringify(socialAuthUser.user));\n                // history.push('/dashboard'); \n                Firebase.getInstance().auth.currentUser.getIdToken().then((token) => {\n                    localStorage.setItem(AppConstants.AUTH_TOKEN, token);\n                    localStorage.setItem(AppConstants.USER_FIREBASE_DETAILS, JSON.stringify(socialAuthUser.user));\n                    WebService.getInstance().getProfile((response)=>{\n                        console.log(response);\n                        if(response.success){\n                            localStorage.setItem(AppConstants.USER_DETAILS, JSON.stringify(response));\n                            history.push('/dashboard'); \n                        }\n                        else{\n                            this.setState({ errorMessage: response.message, loginFailed: true });\n                        }\n                    },(error)=>{\n                        console.log(error);\n                        this.setState({ errorMessage: error.message, loginFailed: true });\n                    })\n                });\n            }\n        }).catch(error => {\n            debugger;\n            console.log(error);\n            this.setState({ errorMessage: error.message, loginFailed: true })\n        });\n    }\n\n    handleSignupSubmit(event) {\n        event.preventDefault();\n        const { email, password, screenName, name } = this.state;\n        WebService.getInstance().screenNameLookup(screenName, (response) => {\n            if (!response.success) {\n                Firebase.getInstance().signUp(email, password).then(authUser => {\n                    console.log(authUser);\n                    if (authUser.additionalUserInfo.isNewUser) {\n                        authUser.user.sendEmailVerification();\n                        WebService.getInstance().signUp({email, screenName, name}, (response) => {\n                            console.log(response);\n                            if(response.success){\n                                alert('Sign Up Successfully. Please verify email and then login.');\n                            }\n                        }, (error) => {\n                            console.log(error);\n                            this.setState({ errorMessage: error.message, loginFailed: true })\n                        })\n                    }\n                }).catch(error => {\n                    console.log(error);\n                    this.setState({ errorMessage: error.message, loginFailed: true })\n                });\n            }\n            else {\n                this.setState({ errorMessage: response.message, loginFailed: true })\n            }\n        }, (error) => {\n            console.log(error);\n        })\n    }\n\n    handleLoginSubmit(event) {\n        event.preventDefault();\n        const { username, password } = this.state;\n        Firebase.getInstance().login(username, password).then(authUser => {\n            console.log('Login');\n            if (!authUser.user.emailVerified) {\n                this.setState({ errorMessage: 'Please Verify Email First!', loginFailed: true });\n            }\n            else {\n                Firebase.getInstance().auth.currentUser.getIdToken().then((token) => {\n                    localStorage.setItem(AppConstants.AUTH_TOKEN, token);\n                    localStorage.setItem(AppConstants.USER_FIREBASE_DETAILS, JSON.stringify(authUser.user));\n                    WebService.getInstance().getProfile((response)=>{\n                        if(response.success){\n                            console.log(response);\n                            localStorage.setItem(AppConstants.USER_DETAILS, JSON.stringify(response));\n                            history.push('/dashboard'); \n                        }\n                        else{\n                            this.setState({ errorMessage: response.message, loginFailed: true });\n                        }\n                    },(error)=>{\n                        this.setState({ errorMessage: error.message, loginFailed: true });\n                    })\n                });\n            }\n        }).catch(error => {\n            console.log(error);\n            this.setState({ errorMessage: error.message, loginFailed: true });\n        });\n    }\n}\n","import React, { Component, Fragment } from 'react';\nimport './Dashboard.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport AppConstants from \"../../constants/AppConstants\";\nimport Navbar from '../Navbar/Navbar';\nimport WebService from '../../services/WebService';\nimport { history } from '../../router/history';\nvar Modal = require('react-bootstrap-modal')\n\nexport default class Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalIsOpen: false,\n            hackathons: [],\n            isAckPositive: null,\n            ackMessage: null,\n            eventName: null\n        };\n        this.user = JSON.parse(localStorage.getItem(AppConstants.USER_DETAILS));\n        console.log(this.user);\n\n    }\n\n    componentDidMount() {\n        this.getHackathon(this.user.admin ? \"admin\" : \"hacker\")\n    }\n\n    getHackathon(role) {\n        WebService.getInstance().getHackathon(role, (response) => {\n            console.log(response);\n            if (response.success) {\n                this.setState({ hackathons: response.results })\n            }\n        }, (error) => {\n            console.log(error);\n            this.setState({ isAckPositive: false, ackMessage: error })\n        });\n    }\n\n    renderAcknowledgement() {\n        if (this.state.ackMessage) {\n            return (\n                <div class=\"alert\" className={this.state.isAckPositive ? 'alert-success' : 'alert-danger'} role=\"alert\">\n                    {this.state.ackMessage}\n                </div>\n            );\n        }\n    }\n\n\n    render() {\n        let redirectVar = null;\n        if (!localStorage.getItem(AppConstants.AUTH_TOKEN)) {\n            redirectVar = <Redirect to=\"/\" />\n        }\n        return (\n            <div className=\"container dashboard\">\n                {redirectVar}\n                <Navbar></Navbar>\n                <div className=\"row create-row\">\n                    {this.renderAcknowledgement()}\n                    {\n                        this.user.admin ?\n                            <Link to=\"/createHackathon\"><button type=\"button\" class=\"btn btn-dark btn-lg\">\n                                <span class=\"glyphicon glyphicon-plus\"></span> Create Hackathon\n                            </button>\n                            </Link>\n                            : null\n                    }\n                </div>\n                <div className=\"row hack\">\n                    {this.renderHackathon()}\n                </div>\n                {this.renderCreateModal()}\n            </div>\n        );\n    }\n\n    renderHackathon() {\n        let views = []\n        if (this.state.hackathons.length == 0) {\n            return (\n                <h3>No Hackathons Available</h3>\n            )\n        }\n        else {\n            this.state.hackathons.map((hack, index) => {\n                views.push(\n                    <div class=\"card rajat_hack_hacakathon_list_card\" onClick={() => { this.onHackClick(hack.eventName) }}>\n                        <div class=\"card-body\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6 rajat_hackathon_list_description_col\">\n                                    <h4 class=\"card-title\">{hack.eventName}</h4>\n                                    <p class=\"card-text rajat_hackathon_list_description\">{hack.description}</p>\n                                </div>\n                                <div class=\"col-md-3 rajat_hackathon_info\">\n                                    <p><span class=\"rajat_muted_span\">Starts On  </span>{new Date(hack.startDate).toDateString()}</p>\n                                    <p><span class=\"rajat_muted_span\">Ends On  </span>{new Date(hack.endDate).toDateString()}</p>\n                                    <p><span class=\"rajat_muted_span\">Team Size  </span>{hack.teamMinSize + ' to ' + hack.teamMaxSize + ' members'}</p>\n                                    <p><span class=\"rajat_muted_span\">Registration Fee  $</span>{hack.registrationFee}</p>\n                                </div>\n                                <div class=\"col-md-3\" style={{ textAlign: \"center\" }}>\n                                    {\n                                        hack.finalized ?\n                                            <Fragment>\n                                                <button type=\"button\" class=\"btn btn-info\" onClick={(event) => { this.getLeaderBoard(hack.eventName); event.stopPropagation() }}>\n                                                    <span class=\"glyphicon glyphicon-th-list\">  </span> LeaderBoard\n                                                </button>\n                                                <br />\n                                                <br />\n                                            </Fragment>\n                                            : null\n                                    }\n                                    {\n                                        this.user.admin && !hack.finalized ?\n                                            <Fragment>\n                                                <button type=\"button\" class=\"btn btn-info\" onClick={(event) => { this.openModal(hack.eventName); event.stopPropagation() }}>\n                                                    <span class=\"glyphicon glyphicon-usd\">  </span> Add Expenses\n                                            </button>\n                                                <br />\n                                                <br />\n                                            </Fragment>\n                                            : null\n                                    }\n                                    {\n                                        this.user.admin ?\n                                            <button type=\"button\" class=\"btn btn-info\" onClick={(event) => { this.getFinancialReport(hack.eventName); event.stopPropagation() }}>\n                                                <span class=\"glyphicon glyphicon-file\">  </span> Financial Report\n                                            </button>\n                                            : null\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            });\n            return views;\n        }\n    }\n\n    getFinancialReport(eventName) {\n        WebService.getInstance().fetchFinancialReport(this.user.email, eventName, (response) => {\n            console.log(response);\n            if (response) {\n                history.push('/financialReport', { details: response })\n            }\n            else {\n                this.setState({ isAckPositive: false, ackMessage: response })\n            }\n        }, (error) => {\n            console.log(error);\n            this.setState({ isAckPositive: false, ackMessage: error })\n        })\n    }\n\n    getLeaderBoard(eventName) {\n        history.push({\n            pathname: '/leaderBoard',\n            search: '?eventName=' + eventName,\n        });\n    }\n\n    onHackClick(eventName) {\n        if (this.user.admin) {\n            history.push('/createHackathon', { eventName: eventName })\n        }\n        else {\n            history.push('/detail', { eventName: eventName, role: 'hacker' })\n        }\n    }\n\n    openModal(eventName) {\n        this.setState({ modalIsOpen: true, eventName });\n    }\n\n    closeModal() {\n        this.setState({ modalIsOpen: false });\n    }\n\n\n    onChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    addExpenses(event) {\n        event.preventDefault();\n        let { eventName, title, description, amount } = this.state;\n        let req = { eventName, title, description, amount };\n        console.log(req);\n        WebService.getInstance().addExpense(req, (response) => {\n            if (response.success) {\n                this.setState({ isAckPositive: true, ackMessage: response.message })\n                this.closeModal();\n            }\n            else {\n                this.setState({ isAckPositive: true, ackMessage: response.message })\n                this.closeModal();\n            }\n        }, (error) => {\n            console.log(error);\n            this.setState({ isAckPositive: false, ackMessage: error })\n            this.closeModal();\n        });\n    }\n\n    renderCreateModal(eventName) {\n        return (\n            <Modal show={this.state.modalIsOpen}\n                onHide={this.closeModal.bind(this)}\n                aria-labelledby=\"ModalHeader\">\n                <form onSubmit={this.addExpenses.bind(this)}>\n                    <Modal.Header closeButton>\n                        <Modal.Title id='ModalHeader'>{\"Add Expenses for \" + this.state.expenseEventName}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div class=\"form-group-md\">\n                            <label>Expense Title <span className=\"required\"> *</span></label>\n                            <input type=\"text\" class=\"form-control form-control-md\" onChange={this.onChange} name=\"title\" value={this.state.name} placeholder=\"Title\" required />\n                        </div>\n                        <div class=\"form-group-md\">\n                            <label>Expense Description<span className=\"required\"> *</span></label>\n                            <input type=\"text\" class=\"form-control form-control-md\" onChange={this.onChange} name=\"description\" value={this.state.description} placeholder=\"Description\" required />\n                        </div>\n                        <div class=\"form-group-md\">\n                            <label>Expense Amount $<span className=\"required\"> *</span></label>\n                            <input type=\"number\" class=\"form-control form-control-md\" onChange={this.onChange} name=\"amount\" value={this.state.address} placeholder=\"Amount\" required />\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Modal.Dismiss className='btn btn-default'>Cancel</Modal.Dismiss>\n                        <button type=\"submit\" className='btn btn-primary'>Add</button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        )\n    }\n}","import React, { Component, Fragment } from 'react';\nimport './MyProfile.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport AppConstants from \"../../constants/AppConstants\";\nimport Navbar from '../Navbar/Navbar';\nimport WebService from '../../services/WebService';\nimport Autocomplete from 'react-autocomplete';\nexport default class MyProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ackMessage: null,\n            isAckPositive: null,\n            isFormDirty: false,\n            organizationList: [],\n            displayOrganization: '',\n            userProfile: {\n                name: '',\n                address: '',\n                email: '',\n                screenName: \"\",\n                businessTitle: '',\n                aboutMe: '',\n                organization: \"\",\n                portraitUrl: null\n            },\n        };\n    }\n\n    componentDidMount() {\n        WebService.getInstance().getProfile((response) => {\n            console.log(response);\n            if (response.success) {\n                this.setState({\n                    userProfile: response,\n                    displayOrganization: response.organization ? response.organization : ''\n                });\n            }\n        }, (error) => {\n            console.log(error);\n        });\n        WebService.getInstance().searchOrganization((response) => {\n            console.log(response);\n            if (response.success) {\n                this.setState({ organizationList: response.organizationNames });\n            }\n        }, (error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        let redirectVar = null;\n        if (!localStorage.getItem(AppConstants.AUTH_TOKEN)) {\n            redirectVar = <Redirect to=\"/\" />\n        }\n        return (\n            <div className=\"container myprofile\">\n                {redirectVar}\n                <Navbar></Navbar>\n                <div class=\"profile-container\">\n                    {this.renderAcknowledgement()}\n                    <div class=\"row profile-pic\">\n                        {/*this.renderProfilePicture()*/}\n                        {/* <img class=\"rounded-circle\" height=\"100\" width=\"100\" src={profile}/> */}\n                        <h1>{this.state.userProfile.name}</h1>\n                    </div>\n                    <div class=\"row profile-information\">\n                        <div class=\"col-9-lg\">\n                            <h2>Profile Information</h2><br />\n                            <form onSubmit={this.handleSubmit.bind(this)}>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control form-control-lg\" onChange={this.onChange} name=\"name\" value={this.state.userProfile.name} placeholder=\"Name\" required />\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control form-control-lg\" onChange={this.onChange} name=\"screenName\" value={this.state.userProfile.screenName} placeholder=\"Screen Name\" required disabled />\n                                </div>\n                                <div class=\"form-group\">\n                                    <textarea class=\"form-control form-control-lg\" rows=\"4\" onChange={this.onChange} name=\"aboutMe\" value={this.state.userProfile.aboutMe} placeholder=\"About me\"></textarea>\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control form-control-lg\" onChange={this.onChange} name=\"email\" value={this.state.userProfile.email} placeholder=\"Email\" disabled />\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control form-control-lg\" onChange={this.onChange} name=\"businessTitle\" value={this.state.userProfile.businessTitle} placeholder=\"Business Title\" />\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control form-control-lg\" onChange={this.onChange} name=\"address\" value={this.state.userProfile.address} placeholder=\"Address\" />\n                                </div>\n                                <div class=\"form-group\">\n                                    <Autocomplete\n                                        wrapperStyle={{ width: '100%' }}\n                                        inputProps={{ className: \"autoinput\", name: \"organization\", placeholder: \"Organization\" }}\n                                        getItemValue={(item) => item}\n                                        items={this.state.organizationList}\n                                        renderItem={(item, isHighlighted) =>\n                                            <div style={{ background: isHighlighted ? 'lightgray' : 'white', padding: '5px' }}>\n                                                {item}\n                                            </div>\n                                        }\n                                        renderInput={(props) =>\n                                            <div className=\"form-control form-control-lg\">\n                                                <input {...props} />\n                                                {this.state.userProfile.organization ?\n                                                    <span className={this.state.userProfile.organizationApprovalStatus ? \"glyphicon glyphicon-ok\" : \"glyphicon glyphicon-time\"}></span>\n                                                    : null}\n                                            </div>\n                                        }\n                                        value={this.state.userProfile.organization ? this.state.userProfile.organization : ''}\n                                        onSelect={(item) => {\n                                            let userProfile = Object.assign(this.state.userProfile, { organization: item });\n                                            this.setState({ userProfile, isFormDirty: true, ackMessage: null });\n                                        }}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control form-control-lg\" onChange={this.onChange} name=\"portraitUrl\" value={this.state.userProfile.portraitUrl} placeholder=\"Portrait URL\" />\n                                </div>\n                                <div class=\"form-group save-button\">\n                                    <button type=\"submit\" class=\"btn btn-primary btn-lg\" disabled={!this.state.isFormDirty}>Save Changes</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    onChange = (event) => {\n        console.log(event.target.name);\n        let userProfile = null;\n        if (event.target.name == 'organization') {\n            userProfile = Object.assign(this.state.userProfile, { organization: event.target.value.length > 0 ? event.target.value : null });\n        }\n        else {\n            userProfile = Object.assign(this.state.userProfile, { [event.target.name]: event.target.value });\n        }\n        this.setState({ userProfile, isFormDirty: true, ackMessage: null });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        WebService.getInstance().updateProfile(this.state.userProfile, (response) => {\n            console.log(response);\n            if (response.success) {\n                this.setState({ userProfile: response, ackMessage: response.message, isAckPositive: true })\n            }\n            else {\n                this.setState({ ackMessage: response.message, isAckPositive: false })\n            }\n        }, (error) => {\n            console.log(error);\n            this.setState({ ackMessage: error, isAckPositive: false })\n        });\n    }\n\n    renderAcknowledgement() {\n        if (this.state.ackMessage) {\n            return (\n                <div class=\"alert\" className={this.state.isAckPositive ? 'alert-success' : 'alert-danger'} role=\"alert\">\n                    {this.state.ackMessage}\n                </div>\n            );\n        }\n    }\n\n\n    renderProfilePicture() {\n        // let profilePicture = this.state.userProfile.user_pic_url ? this.state.userProfile.user_pic_url : profile;\n        // return (\n        //     <div class=\"avatar-upload\">\n        //         <div class=\"avatar-preview\">\n        //             <div id=\"imagePreview\">\n        //                 <img src={profilePicture} style={{ 'height': \"inherit\", 'width': \"inherit\", 'border-radius': '100%' }} />\n        //             </div>\n        //         </div>\n        //     </div>\n        // );\n    }\n}","import React, { Component, Fragment } from 'react';\nimport './MyOrganization.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport AppConstants from \"../../constants/AppConstants\";\nimport Navbar from '../Navbar/Navbar';\nimport WebService from '../../services/WebService';\nimport Collapsible from 'react-collapsible';\nvar Modal = require('react-bootstrap-modal')\n\nexport default class MyOrganization extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalIsOpen: false,\n            myOrganizations: [],\n            isAckPositive: false,\n            ackMessage: null\n        }\n    }\n\n    componentDidMount() {\n        this.getOrganizations();\n    }\n\n    getOrganizations() {\n        WebService.getInstance().getOrganizationList((response) => {\n            console.log(response);\n            if (response.success) {\n                this.setState({ myOrganizations: response.organization })\n            }\n        }, (error) => {\n            this.setState({ isAckPositive: false, ackMessage: error })\n            console.log(error);\n        });\n    }\n\n    renderAcknowledgement() {\n        if (this.state.ackMessage) {\n            return (\n                <div class=\"alert\" className={this.state.isAckPositive ? 'alert-success' : 'alert-danger'} role=\"alert\">\n                    {this.state.ackMessage}\n                </div>\n            );\n        }\n    }\n\n    render() {\n        let redirectVar = null;\n        if (!localStorage.getItem(AppConstants.AUTH_TOKEN)) {\n            redirectVar = <Redirect to=\"/\" />\n        }\n        return (\n            <div className=\"container myorganization\">\n                {redirectVar}\n                <Navbar></Navbar>\n                <div className=\"row create-row\">\n                    {this.renderAcknowledgement()}\n                    <button type=\"button\" class=\"btn btn-dark btn-lg\" onClick={this.openModal.bind(this)}>\n                        <span class=\"glyphicon glyphicon-plus\"></span> Create Organization\n                    </button>\n                </div>\n                <div className=\"row myorg\">\n                    {this.renderOrganizations()}\n                </div>\n                {this.renderCreateModal()}\n            </div>\n        );\n    }\n\n    renderOrganizations() {\n        let views = []\n        this.state.myOrganizations.map((org, index) => {\n            views.push(\n                <Collapsible trigger={org.name}>\n                    {this.renderRequest(org.membershipRequest)}\n                </Collapsible>\n            );\n        });\n        return views;\n    }\n\n    renderRequest(requests) {\n        let views = [];\n        if (requests.length == 0) {\n            return (\n                <div className=\"request-row\">\n                    <h5>No Request Available</h5>\n                </div>\n            );\n        }\n        requests.map((request, index) => {\n            let pReq = { email: request.email, isApproved: true };\n            let nReq = { email: request.email, isApproved: false };\n            views.push(\n                <div className=\"request-row\">\n                    <h5>{request.name}</h5>\n                    <h5>{request.email}</h5>\n                    <button class=\"btn btn-success\" onClick={this.respondRequest.bind(this, pReq)}>\n                        <span class=\"glyphicon glyphicon-ok\"></span> Accept\n                    </button>\n                    <button href=\"#\" class=\"btn btn-danger\" onClick={this.respondRequest.bind(this, nReq)}>\n                        <span class=\"glyphicon glyphicon-remove\"></span> Decline\n                    </button>\n                </div>\n            );\n        });\n        return views;\n    }\n\n    renderCreateModal() {\n        return (\n            <Modal show={this.state.modalIsOpen}\n                onHide={this.closeModal.bind(this)}\n                aria-labelledby=\"ModalHeader\">\n                <form onSubmit={this.createOrg.bind(this)}>\n                    <Modal.Header closeButton>\n                        <Modal.Title id='ModalHeader'>Create Your Organization</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div class=\"form-group-md\">\n                            <label>Organization Name <span className=\"required\"> *</span></label>\n                            <input type=\"text\" class=\"form-control form-control-md\" onChange={this.onChange} name=\"name\" value={this.state.name} placeholder=\"Name\" required />\n                        </div>\n                        <div class=\"form-group-md\">\n                            <label>Description<span className=\"required\"> *</span></label>\n                            <input type=\"text\" class=\"form-control form-control-md\" onChange={this.onChange} name=\"description\" value={this.state.description} placeholder=\"Description\" required />\n                        </div>\n                        <div class=\"form-group-md\">\n                            <label>Address<span className=\"required\"> *</span></label>\n                            <input type=\"text\" class=\"form-control form-control-md\" onChange={this.onChange} name=\"address\" value={this.state.address} placeholder=\"Address\" required />\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Modal.Dismiss className='btn btn-default'>Cancel</Modal.Dismiss>\n                        <button type=\"submit\" className='btn btn-primary'>Create</button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        )\n    }\n\n    onChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    openModal() {\n        this.setState({ modalIsOpen: true });\n    }\n\n    closeModal() {\n        this.setState({ modalIsOpen: false });\n    }\n\n    createOrg(event) {\n        event.preventDefault();\n        let { name, address, description } = this.state;\n        let user = JSON.parse(localStorage.getItem(AppConstants.USER_DETAILS));\n        let req = { name, address, description, email: user.email }\n        WebService.getInstance().createOrganization(req, (response) => {\n            console.log(response);\n            if (response.success) {\n                this.getOrganizations();\n                this.closeModal();\n                this.setState({ name: null, description: null, address: null });\n            }\n        }, (error) => {\n            console.log(error);\n        })\n    }\n\n    respondRequest(req) {\n        WebService.getInstance().respondRequest(req, (response) => {\n            if (response.success) {\n                this.getOrganizations();\n                this.setState({ isAckPositive: true, ackMessage: response.message })\n            }\n            else {\n                this.setState({ isAckPositive: false, ackMessage: response.message })\n            }\n        }, (error) => {\n            this.setState({ isAckPositive: false, ackMessage: error })\n        })\n    }\n\n}","import React, { Component, Fragment } from 'react';\nimport './CreateHackathon.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport AppConstants from \"../../constants/AppConstants\";\nimport Navbar from '../Navbar/Navbar';\nimport { history } from '../../router/history';\nimport WebService from '../../services/WebService';\nvar Modal = require('react-bootstrap-modal')\n\nexport default class CreateHackathon extends Component {\n    constructor(props) {\n        super(props);\n        this.mode=\"create\";\n        this.state = {\n            modalIsOpen: false,\n            eventName: \"\",\n            description: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            judges: \"\",\n            sponsors: \"\",\n            teamMaxSize: \"\",\n            teamMinSize: \"\",\n            registrationFee: \"\",\n            discount: \"\",\n            open: false,\n            finalized: false,\n            failedCreation:false\n        };\n    }\n\n    componentDidMount(){\n        if(this.props.location){\n            if(this.props.location.state && this.props.location.state.eventName){\n                this.getHackathonDetails(this.props.location.state.eventName, \"admin\");\n                this.mode=\"update\";\n            }\n        }\n    }\n\n    getHackathonDetails(eventName, role) {\n        WebService.getInstance().getHackathonDetail(eventName, role, (response) => {\n            console.log(response);\n            if (response.success) {\n                this.setState({ \n                    eventName: response.eventName,\n                    description: response.description,\n                    startDate: new Date(response.startDate).toISOString(),\n                    endDate: new Date(response.endDate).toISOString(),\n                    judges: response.judges.join(', '),\n                    sponsors: response.sponsors.join(', '),\n                    teamMaxSize: response.teamMaxSize,\n                    teamMinSize: response.teamMinSize,\n                    registrationFee: response.registrationFee,\n                    discount: response.discount,\n                    open: response.open,\n                    finalized: response.finalized,\n                 });\n            }\n            else{\n                this.setState({failedCreation:true, errorMessage:response.message});\n            }\n        }, (error) => {\n            console.log(error);\n            this.setState({failedCreation:true, errorMessage:error});\n        });\n    }\n\n    onChange = (event) => {\n        if(event.target.name === \"open\" || event.target.name===\"finalized\"){\n            this.setState({ [event.target.name]: event.target.checked, isFormDirty: true, failedCreation: false });\n        }else{\n            this.setState({ [event.target.name]: event.target.value, isFormDirty: true, failedCreation: false });\n        }\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        console.log(this.state);\n        let { eventName, description, startDate, endDate, judges, sponsors, teamMaxSize, teamMinSize,\n            registrationFee, discount, open, finalized } = this.state\n        WebService.getInstance().createUpdateHackathon( { eventName, description, startDate: (new Date(startDate)).getTime(), endDate: (new Date(endDate)).getTime(), judges: judges.split(',').map(str=>str.trim()), \n            sponsors: sponsors.split(',').map(str=>str.trim()), teamMaxSize, teamMinSize, registrationFee, discount, \n            open, finalized },(response) => {\n            console.log(response);\n            if (response.success) {\n                alert(response.message);\n                history.push('/dashboard');\n            }\n        }, (error) => {\n            console.log(error);\n            this.setState({failedCreation:true, errorMessage:error});\n        });\n    }\n\n    renderFailed() {\n        if (this.state.failedCreation) {\n            return (\n                <div class=\"alert alert-danger\" role=\"alert\">\n                    {this.state.errorMessage}\n                </div>\n            );\n        }\n    }\n\n    render() {\n        let redirectVar = null;\n        if (!localStorage.getItem(AppConstants.AUTH_TOKEN)) {\n            redirectVar = <Redirect to=\"/\" />\n        }\n        return (\n            <div className=\"container create-hackathon\">\n                {redirectVar}\n                <Navbar></Navbar>\n                {this.renderFailed()}\n                <div class=\"rajat_hackathon_form_wrapper\">\n                    <div class=\"row rajat-row\">\n                        <div class=\"col-md-4 rajat_hackathon_form_details\">\n                            <h2>{this.mode == 'create' ? \"Create Hackathon\" : \"Update Hackathon\"}</h2>\n                        </div>\n                        <div class=\"col-md-8 rajat_hackathon_form_wrapper_div\">\n                            <div class=\"rajat_hackathon_form_div\">\n                                <form class=\"rajat_hackathon_registration_form\" onSubmit={this.onSubmit.bind(this)}>\n                                    <div class=\"form-group\">\n                                        <label for=\"eventName\">Event Name</label>\n                                        <input type=\"text\" class=\"form-control\" name=\"eventName\" onChange={this.onChange.bind(this)} value={this.state.eventName} disabled={this.mode != 'create'  ? true : false } placeholder=\"Event name\" required />\n                                        <small id=\"emailHelp\" class=\"form-text text-muted\">Event name should be unique.</small>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <label for=\"description\">Description</label>\n                                        <input type=\"text\" class=\"form-control\" name=\"description\" onChange={this.onChange.bind(this)} value={this.state.description} placeholder=\"Description\" minLength=\"10\" required />\n                                    </div>\n                                    <div class=\"hackathon_dates\">\n                                        <div class=\"row\">\n                                            <div class='col-sm-6'>\n                                                <div class=\"form-group\">\n                                                    <label for=\"startDate\">Start Date</label>\n                                                    <div class='input-group date' >\n                                                        <input type='date' name='startDate' class=\"form-control\" onChange={this.onChange.bind(this)} value={this.state.startDate.substr(0, 10)} required />\n                                                        <span class=\"input-group-addon\">\n                                                            <span class=\"glyphicon glyphicon-calendar\"></span>\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class='col-sm-6'>\n                                                <div class=\"form-group\">\n                                                    <label for=\"endDate\">End Date</label>\n                                                    <div class='input-group date'>\n                                                        <input type='date' class=\"form-control\" name=\"endDate\" onChange={this.onChange.bind(this)} value={this.state.endDate.substr(0, 10)} required />\n                                                        <span class=\"input-group-addon\">\n                                                            <span class=\"glyphicon glyphicon-calendar\"></span>\n                                                        </span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"Judges\">\n                                        <label for=\"judges\">Judges</label>\n                                        <div class=\"form-group\">\n                                            <input type=\"text\" class=\"form-control\" name=\"judges\" placeholder=\"Comma Separated Judges\" onChange={this.onChange.bind(this)} value={this.state.judges} required />\n                                        </div>\n                                    </div>\n                                    <div class=\"sponsors\">\n                                        <label for=\"judges\">Sponsors</label>\n                                        <div class=\"form-group\">\n                                            <input type=\"text\" class=\"form-control\" name=\"sponsors\" placeholder=\"Comma Separated Sponsors\" onChange={this.onChange.bind(this)} value={this.state.sponsors} required />\n                                        </div>\n                                    </div>\n                                    <div class=\"team_size rajat_form_row\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-6\">\n                                                <label for=\"teanMinSize\">Minimum team size</label>\n                                                <input type=\"number\" class=\"form-control\" name=\"teamMinSize\" placeholder=\"Minimum team size\" onChange={this.onChange.bind(this)} value={this.state.teamMinSize} required />\n                                            </div>\n                                            <div class=\"col-sm-6\">\n                                                <label for=\"teanMaxSize\">Maximum team size</label>\n                                                <input type=\"number\" class=\"form-control\" name=\"teamMaxSize\" placeholder=\"Maximum team size\" onChange={this.onChange.bind(this)} value={this.state.teamMaxSize} required />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"fees rajat_form_row\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-6\">\n                                                <label for=\"registrationFee\">Registration Fee</label>\n                                                <input type=\"number\" class=\"form-control\" name=\"registrationFee\" placeholder=\"Registration Fee\" onChange={this.onChange.bind(this)} value={this.state.registrationFee} required />\n                                            </div>\n                                            <div class=\"col-sm-6\">\n                                                <label for=\"discount\">Discount</label>\n                                                <input type=\"number\" class=\"form-control\" name=\"discount\" onChange={this.onChange.bind(this)} value={this.state.discount} placeholder=\"discount\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-6\"></div>\n                                            <div class=\"col-sm-6\"></div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <input type=\"checkbox\" class=\"form-check-input\" name=\"open\" onChange={this.onChange.bind(this)} checked={this.state.open} />\n                                        <label class=\"form-check-label\" for=\"open\">Is hackathon open for submission?</label>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <input type=\"checkbox\" class=\"form-check-input\" name=\"finalized\" onChange={this.onChange.bind(this)} checked={this.state.finalized} />\n                                        <label class=\"form-check-label\" for=\"finalized\">Is Hackathon Finalized?</label>\n                                    </div>\n                                    <button type=\"submit\" class=\"btn rajat_register\">Submit</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}","import React, { Component, Fragment } from 'react';\nimport './Payment.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport AppConstants from \"../../constants/AppConstants\";\nimport Navbar from '../Navbar/Navbar';\nimport WebService from '../../services/WebService';\nimport { history } from '../../router/history';\nconst queryString = require('query-string');\n\nexport default class Payment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: null,\n            eventName: null,\n            originalPrice: '--',\n            discount: '--',\n            discountedPrice: '--',\n            quotation: null\n        };\n\n        this.makePayment=this.makePayment.bind(this);\n    }\n\n    componentDidMount() {\n        console.log((window.location.search));\n        let query = queryString.parse(window.location.search);\n        this.setState(query,()=>{\n            WebService.getInstance().fetchEventPrice(this.state.email, this.state.eventName, (response)=>{\n                if(response.success){\n                    this.setState({\n                        originalPrice: response.originalPrice,\n                        discountPercent: response.discountPercent,\n                        discount: response.discount,\n                        discountedPrice: response.discountedPrice,\n                        quotation:response\n                    })\n                }\n                else{\n                    alert(response.message);\n                }\n            },(error)=>{\n                console.log(error);\n            });\n        });\n    }\n\n    makePayment() {\n        WebService.getInstance().makePayment({...this.state.quotation, email: this.state.email},(response)=>{\n            if(response.success){\n                alert(\"Payment Successfull\");\n                history.push(\"/dashboard\");\n            }\n            else{\n                alert(response.message);\n            }\n        },(error)=>{\n            console.log(error);\n            alert(error);\n        });\n    }\n\n    render() {\n        let redirectVar = null;\n        if (!localStorage.getItem(AppConstants.AUTH_TOKEN)) {\n            redirectVar = <Redirect to=\"/\" />\n        }\n        return (\n            <div className=\"container payment\">\n                {redirectVar}\n                <Navbar></Navbar>\n                <div class=\"container rajat_container\">\n                    <div class=\"rajat_hacakathon_bill_container\">\n                        <div class=\"rajat_hackathon_bill\">\n                            <h2>Open Hack</h2>\n                            <div class=\"rajat_hackathon_bill_details\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-6 bill-left\">\n                                        <b><span class=\"bill_element\">{this.state.eventName}</span></b>\n                                    </div>\n                                    <div class=\"col-sm-6 bill-right\">\n                                        <span class=\"bill_element\">$ {this.state.originalPrice} </span>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-sm-6 bill-left\">\n                                        <span class=\"bill_element\">Discount %</span>\n                                    </div>\n                                    <div class=\"col-sm-6 bill-right\">\n                                        <span class=\"bill_element\">{this.state.discountPercent+'%'}</span>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-sm-6 bill-left\">\n                                        <span class=\"bill_element\">Discount Amount</span>\n                                    </div>\n                                    <div class=\"col-sm-6 bill-right\">\n                                        <span class=\"bill_element\">{this.state.discount}</span>\n                                    </div>\n                                </div>\n                                <div class=\"row bill_total_row\">\n                                    <div class=\"col-sm-6 bill-left\">\n                                        <b><span class=\"bill_element\">Total</span></b>\n                                    </div>\n                                    <div class=\"col-sm-6 bill-right\">\n                                        <b><span class=\"bill_element\">${parseInt(this.state.discountedPrice)}</span></b>\n                                    </div>\n                                </div>\n                            </div>\n                            <button class=\"btn rajat_register\" onClick={this.makePayment.bind(this)}>Pay</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n }\n\n\n\n","import React, { Component, Fragment } from 'react';\nimport './HackathonDetail.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport AppConstants from \"../../constants/AppConstants\";\nimport Navbar from '../Navbar/Navbar';\nimport WebService from '../../services/WebService';\nvar Modal = require('react-bootstrap-modal')\n\nexport default class HackathonDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalIsOpen: false,\n            details: null,\n            isAckPositive: null,\n            ackMessage: null,\n            url: null,\n            teamName: null,\n            teamMember: null,\n            role: 'hacker',\n            eventName: null,\n            teams: []\n        };\n        this.user = JSON.parse(localStorage.getItem(AppConstants.USER_DETAILS));\n    }\n\n    componentDidMount() {\n        console.log(this.props.location.state.eventName, this.props.location.state.role);\n        this.setState({ eventName: this.props.location.state.eventName, role: this.props.location.state.role }, () => {\n            this.getHackathonDetails(this.state.eventName, this.state.role);\n        })\n    }\n\n    getHackathonDetails(eventName, role) {\n        WebService.getInstance().getHackathonDetail(eventName, role, (response) => {\n            console.log(response);\n            if (response.success) {\n                if (this.state.role == 'hacker') {\n                    let team = Object.keys(response.team);\n                    let url = null\n                    if (team.length != 0 && response.team[team[0]].submission) {\n                        url = response.team[team[0]].submission\n                    }\n                    if (response.success) {\n                        this.setState({\n                            details: response,\n                            url\n                        });\n                    }\n                }\n                else if (this.state.role == \"judge\") {\n                    this.setState({ teams: response.teams });\n                }\n            }\n            else {\n                this.setState({ isAckPositive: false, ackMessage: response.message })\n            }\n        }, (error) => {\n            console.log(error);\n            this.setState({ isAckPositive: false, ackMessage: error })\n        });\n    }\n\n    renderAcknowledgement() {\n        if (this.state.ackMessage) {\n            return (\n                <div class=\"alert\" className={this.state.isAckPositive ? 'alert-success' : 'alert-danger'} role=\"alert\">\n                    {this.state.ackMessage}\n                </div>\n            );\n        }\n    }\n\n\n    render() {\n        let redirectVar = null;\n        if (!localStorage.getItem(AppConstants.AUTH_TOKEN)) {\n            redirectVar = <Redirect to=\"/\" />\n        }\n        return (\n            <div className=\"container hack-detail\">\n                {redirectVar}\n                <Navbar></Navbar>\n                <div className=\"row create-row\">\n                    {this.renderAcknowledgement()}\n                </div>\n                {this.state.details && this.state.role == 'hacker' ? this.renderDetails() : null}\n                {this.state.role == 'judge' && this.state.teams ? this.renderEvaluation() : null}\n                {this.state.role == 'hacker' && this.state.details ? this.renderDetailsInput() : null}\n            </div>\n        );\n    }\n\n    onChangeScore(event) {\n        console.log(event.target.value);\n        let team = this.state.teams[event.target.name];\n        let teams = this.state.teams;\n        team['score'] = event.target.value;\n        teams.splice(event.target.name, 1, team);\n        this.setState({ teams });\n    }\n\n    renderEvaluation() {\n        let views = [];\n        console.log(this.state.teams);\n\n        return (\n            <div class=\"container\">\n                <h2>{this.state.eventName}</h2>\n                <br />\n                <form onSubmit={this.onSubmitScore.bind(this)}>\n                    <table class=\"table table-bordered \">\n                        <thead>\n                            <tr>\n                                <th>Team Name</th>\n                                <th>Submission</th>\n                                <th>Score</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.teams.map((team, index) => {\n                                    return (\n                                        <tr key={index}>\n                                            <td>{team.teamName}</td>\n                                            <td>{team.submission}</td>\n                                            <td><input className=\"form-control\" name={index} type=\"number\" onChange={this.onChangeScore.bind(this)} value={parseFloat(team.score)} min=\"0\" max=\"10\" step=\"0.1\" required /></td>\n                                        </tr>\n                                    );\n                                })\n\n                            }\n                        </tbody>\n                    </table>\n                    <div className=\"row\" style={{ textAlign: \"center\" }}>\n                        <button type=\"submit\" className=\"btn btn-lg rajat_register\">Save Score</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n    onSubmitScore(event) {\n        event.preventDefault();\n        let req = {\n            \"judge\": this.user.email,\n            \"eventName\": this.state.eventName,\n            \"teams\": this.state.teams\n        }\n        WebService.getInstance().saveHackathonGrade(req, (response) => {\n            console.log(response);\n            if(response.success){\n                this.setState({ isAckPositive: true, ackMessage: response.message })\n            }\n            else{\n                this.setState({ isAckPositive: false, ackMessage: response.message })\n            }\n        }, (error) => {\n            console.log(error);\n            this.setState({ isAckPositive: false, ackMessage: error })\n        });\n    }\n\n    renderDetails() {\n        return (\n            <div class=\"container rajat_container\">\n                <div class=\"rajat_hackathon_detail_view_heading_div\">\n                    <h2>{this.state.details.eventName}</h2>\n                </div>\n                <div class=\"rajat_hackathon_detail_view_description_div\">\n                    <p>{this.state.details.description}</p>\n                </div>\n\n                <div class=\"rajat_hackathon_detail_view_details_div\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">Start Date: </span><span class=\"glyphicon glyphicon-calendar\" aria-hidden=\"true\"> </span>{new Date(this.state.details.startDate).toDateString()}</p>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">End Date: </span><span class=\"glyphicon glyphicon-calendar\" aria-hidden=\"true\"> </span>{new Date(this.state.details.endDate).toDateString()}</p>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">Open for submission: </span>{this.state.details.open ? \"Yes\" : \"No\"}</p>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">Sponsors: </span>{this.state.details.sponsors.join(\", \")}</p>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">Registration Fee: $</span>{this.state.details.registrationFee}</p>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">Discount: </span>{this.state.details.discount}</p>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">Minimum Team Size: </span>{this.state.details.teamMinSize}</p>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">Maximum Team Size: </span>{this.state.details.teamMaxSize}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderDetailsInput() {\n        let team = Object.keys(this.state.details.team);\n        if (team.length == 0) {\n            return this.renderRegistration();\n        }\n        else {\n            if (this.state.details.team[team[0]].allPaid) {\n                return this.renderSubmission(true);\n            }\n            else {\n                return this.renderSubmission(false);\n            }\n        }\n    }\n\n    renderSubmission(isEnable, submission = \"\") {\n        return (\n            <div class=\"rajat_hackathon_form_wrapper\">\n                <div class=\"row\">\n                    <div class=\"col-md-4 rajat_hackathon_form_details\">\n                        <h2>Submit your Work</h2>\n                    </div>\n                    <div class=\"col-md-8 rajat_hackathon_form_wrapper_div\">\n                        <div class=\"rajat_hackathon_form_div\">\n                            <form class=\"rajat_hackathon_registration_form\" onSubmit={this.submission.bind(this)}>\n                                <div class=\"form-group\">\n                                    <label for=\"url\">Github URL</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"url\" onChange={this.onChange.bind(this)} value={this.state.url} placeholder=\"URL\" required />\n                                </div>\n                                <button type=\"submit\" class=\"btn rajat_register\" disabled={!isEnable}>Submit</button>\n                            </form>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    submission(event) {\n        event.preventDefault();\n        let team = Object.keys(this.state.details.team);\n        let teamName = team[0];\n        let req = {\n            teamName,\n            eventName: this.state.details.eventName,\n            url: this.state.url\n        };\n        WebService.getInstance().submitHackathon(req, (response) => {\n            if (response.success) {\n                this.getHackathonDetails(this.props.location.state.eventName, 'hacker');\n                this.setState({ ackMessage: response.message, isAckPositive: true });\n            }\n            else {\n                this.setState({ ackMessage: response.message, isAckPositive: false })\n            }\n        }, (error) => {\n            console.log(error);\n            this.setState({ ackMessage: error, isAckPositive: false })\n        })\n    }\n\n    onChange(event) {\n        this.setState({ [event.target.name]: event.target.value, ackMessage: null });\n    }\n\n\n    renderRegistration() {\n        return (\n            <div class=\"rajat_hackathon_form_wrapper\">\n                <div class=\"row\">\n                    <div class=\"col-md-4 rajat_hackathon_form_details\">\n                        <h2>Register for this Hackathon</h2>\n                    </div>\n                    <div class=\"col-md-8 rajat_hackathon_form_wrapper_div\">\n                        <div class=\"rajat_hackathon_form_div\">\n                            <form class=\"rajat_hackathon_registration_form\" onSubmit={this.registeration.bind(this)}>\n                                <div class=\"form-group\">\n                                    <label for=\"eventName\">Team Name</label>\n                                    <input type=\"text\" class=\"form-control\" name=\"teamName\" onChange={this.onChange.bind(this)} value={this.state.teamName} placeholder=\"Team name\" required />\n                                    <small id=\"emailHelp\" class=\"form-text text-muted\">Team name should be unique.</small>\n                                </div>\n                                <div class=\"teamMembers\">\n                                    <label for=\"judges\">Team members</label>\n                                    <input type=\"text\" name=\"teamMember\" class=\"form-control\" onChange={this.onChange.bind(this)} value={this.state.teamMember} placeholder=\"Example: memberemail@gmail.com; memberRole, memberemail@gmail.com; memberRole\" required />\n                                </div>\n                                <button type=\"submit\" class=\"btn rajat_register\">Submit</button>\n                            </form>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n\n    registeration(event) {\n        event.preventDefault();\n        let teams = this.state.teamMember.split(',').map((team) => {\n            let temp = team.split(';');\n            return {\n                \"role\": temp[1],\n                \"email\": temp[0].trim()\n            }\n        });\n        let req = {\n            \"email\": this.user.email,\n            \"eventName\": this.props.location.state.eventName,\n            \"teamName\": this.state.teamName,\n            \"teamMembers\": teams\n        }\n        WebService.getInstance().registerHackathon(req, (response) => {\n            console.log(response);\n            if (response.success) {\n                this.getHackathonDetails(this.props.location.state.eventName, 'hacker');\n                this.setState({ ackMessage: response.message, isAckPositive: true })\n            }\n            else {\n                this.setState({ ackMessage: response.message, isAckPositive: true })\n            }\n        }, (error) => {\n            console.log(error);\n            this.setState({ ackMessage: error, isAckPositive: false })\n        })\n    }\n}\n","import React, { Component, Fragment } from 'react';\nimport './MyJudgement.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport AppConstants from \"../../constants/AppConstants\";\nimport Navbar from '../Navbar/Navbar';\nimport WebService from '../../services/WebService';\nimport { history } from '../../router/history';\nvar Modal = require('react-bootstrap-modal')\n\nexport default class MyJudgement extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalIsOpen: false,\n            hackathons: [],\n            isAckPositive: null,\n            ackMessage: null\n        };\n        this.user = JSON.parse(localStorage.getItem(AppConstants.USER_DETAILS));\n    }\n\n    componentDidMount() {\n        this.getHackathon('judge')\n    }\n\n    getHackathon(role) {\n        WebService.getInstance().getHackathon(role, (response) => {\n            console.log(response);\n            if(response.success){\n                this.setState({hackathons:response.results})\n            }\n        }, (error) => {\n            console.log(error);\n            this.setState({isAckPositive:false, ackMessage:error})\n        });\n    }\n\n    renderAcknowledgement() {\n        if (this.state.ackMessage) {\n            return (\n                <div class=\"alert\" className={this.state.isAckPositive ? 'alert-success' : 'alert-danger'} role=\"alert\">\n                    {this.state.ackMessage}\n                </div>\n            );\n        }\n    }\n\n\n    render() {\n        let redirectVar = null;\n        if (!localStorage.getItem(AppConstants.AUTH_TOKEN)) {\n            redirectVar = <Redirect to=\"/\" />\n        }\n        return (\n            <div className=\"container dashboard\">\n                {redirectVar}\n                <Navbar></Navbar>\n                <div className=\"row create-row\">\n                    {this.renderAcknowledgement()}\n                </div>\n                <div className=\"row hack\">\n                    {this.renderHackathon()}\n                </div>\n            </div>\n        );\n    }\n\n    renderHackathon() {\n        let views = []\n        if(this.state.hackathons.length == 0){\n            return(\n                <h3>No Hackathons Available for Judgement</h3>\n            )\n        }\n        else{\n            this.state.hackathons.map((hack, index) => {\n                views.push(\n                        <div class=\"card rajat_hack_hacakathon_list_card\" onClick={()=>{this.onHackClick(hack.eventName)}}>\n                            <div class=\"card-body\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-8 rajat_hackathon_list_description_col\">\n                                        <h4 class=\"card-title\">{hack.eventName}</h4>\n                                        <p class=\"card-text rajat_hackathon_list_description\">{hack.description}</p>\n                                    </div>\n                                    <div class=\"col-md-4 rajat_hackathon_info\">\n                                        <p><span class=\"rajat_muted_span\">Starts On  </span>{new Date(hack.startDate).toDateString()}</p>\n                                        <p><span class=\"rajat_muted_span\">Ends On  </span>{new Date(hack.endDate).toDateString()}</p>\n                                        <p><span class=\"rajat_muted_span\">Team Size  </span>{hack.teamMinSize + ' to ' + hack.teamMaxSize +' members'}</p>\n                                        <p><span class=\"rajat_muted_span\">Registration Fee  $</span>{hack.registrationFee}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                );\n            });\n            return views;\n        }\n    }\n\n    onHackClick(eventName){\n        history.push('/detail',{eventName:eventName, role:'judge'})\n    }\n}\n","import React, { Component, Fragment } from 'react';\nimport './LeaderBoard.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport AppConstants from \"../../constants/AppConstants\";\nimport Navbar from '../Navbar/Navbar';\nimport WebService from '../../services/WebService';\nimport { history } from '../../router/history';\nconst queryString = require('query-string');\nvar Modal = require('react-bootstrap-modal')\n\nexport default class LeaderBoard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalIsOpen: false,\n            result: [],\n            isAckPositive: null,\n            ackMessage: null,\n            eventName: \"\"\n        };\n    }\n\n    componentDidMount(){\n        let query = queryString.parse(window.location.search);\n        if(query.eventName){\n            this.getLeaderBoard(query.eventName)\n        }\n    }\n\n    getLeaderBoard(eventName) {\n        WebService.getInstance().fetchLeaderBoard(eventName, (response) => {\n            console.log(response);\n            if (response.success) {\n                this.setState({result:response.result});\n            }\n            else {\n                this.setState({ isAckPositive: false, ackMessage: response.message })\n            }\n        }, (error) => {\n            console.log(error);\n            this.setState({ isAckPositive: false, ackMessage: error })\n        })\n    }\n\n    renderAcknowledgement() {\n        if (this.state.ackMessage) {\n            return (\n                <div class=\"alert\" className={this.state.isAckPositive ? 'alert-success' : 'alert-danger'} role=\"alert\">\n                    {this.state.ackMessage}\n                </div>\n            );\n        }\n    }\n\n\n    render() {\n        let redirectVar = null;\n        if (!localStorage.getItem(AppConstants.AUTH_TOKEN)) {\n            redirectVar = <Redirect to=\"/\" />\n        }\n        return (\n            <div className=\"container leader-board\">\n                {redirectVar}\n                <Navbar></Navbar>\n                <div className=\"row create-row\">\n                    {this.renderAcknowledgement()}\n                </div>\n                <div className=\"row hack\">\n                    {this.renderLeaderBoard()}\n                </div>\n            </div>\n        );\n    }\n\n    renderLeaderBoard() {\n        let views = [];\n        console.log(this.state.result);\n\n        return (\n            <div class=\"container\">\n                <h2>{this.state.eventName + '  Leader Board'}</h2>\n                <br />\n                <table class=\"table table-bordered \">\n                    <thead>\n                        <tr>\n                            <th>Rank</th>\n                            <th>Team Name</th>\n                            <th>Team Members</th>\n                            <th>Score</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.result.map((team, index) => {\n                                if (team.rank == 1) {\n                                    return (\n                                        <tr key={index} style={{ backgroundColor: \"#ff7575\", fontWeight: \"bold\" }}>\n                                            <td>{team.rank}</td>\n                                            <td>{team.teamName}</td>\n                                            <td style={{textAlign:\"justify\"}}>\n                                                {team.teamMembers.map((name) => {\n                                                    return (\n                                                        <p><span class=\"glyphicon glyphicon-user\" style={{fontSize:\"10px\", marginRight:\"5px\"}}></span>{name.email}</p>\n                                                    )\n                                                })}\n                                            </td>\n                                            <td>{team.score}</td>\n                                        </tr>\n                                    );\n                                }\n                                else if (team.rank == 2) {\n                                    return (\n                                        <tr key={index} style={{ backgroundColor: \"#47efc2\", fontWeight: \"bold\" }}>\n                                            <td>{team.rank}</td>\n                                            <td>{team.teamName}</td>\n                                            <td style={{textAlign:\"justify\"}}>\n                                                {team.teamMembers.map((name) => {\n                                                    return (\n                                                        <p><span class=\"glyphicon glyphicon-user\" style={{fontSize:\"10px\", marginRight:\"5px\"}}></span>{name.email}</p>\n                                                    )\n                                                })}\n                                            </td>\n                                            <td>{team.score}</td>\n                                        </tr>\n                                    );\n                                }\n                                else if (team.rank == 3) {\n                                    return (\n                                        <tr key={index} style={{ backgroundColor: \"#47a6ef\", fontWeight: \"bold\" }}>\n                                            <td>{team.rank}</td>\n                                            <td>{team.teamName}</td>\n                                            <td style={{textAlign:\"justify\"}}>\n                                                {team.teamMembers.map((name) => {\n                                                    return (\n                                                        <p><span class=\"glyphicon glyphicon-user\" style={{fontSize:\"10px\", marginRight:\"5px\"}}></span>{name.email}</p>\n                                                    )\n                                                })}\n                                            </td>\n                                            <td>{team.score}</td>\n                                        </tr>\n                                    );\n                                }\n                                else {\n                                    return (\n                                        <tr key={index}>\n                                            <td>{team.rank}</td>\n                                            <td>{team.teamName}</td>\n                                            <td style={{textAlign:\"justify\"}}>\n                                                {team.teamMembers.map((name) => {\n                                                    return (\n                                                        <p><span class=\"glyphicon glyphicon-user\" style={{fontSize:\"10px\", marginRight:\"5px\"}}></span>{name.email}</p>\n                                                    )\n                                                })}\n                                            </td>\n                                            <td>{team.score}</td>\n                                        </tr>\n                                    );\n                                }\n                            })\n\n                        }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    onHackClick(eventName) {\n        history.push('/detail', { eventName: eventName, role: 'judge' })\n    }\n}\n","import React, { Component, Fragment } from 'react';\nimport './FinancialReport.css';\nimport { Link, Redirect } from 'react-router-dom';\nimport AppConstants from \"../../constants/AppConstants\";\nimport Navbar from '../Navbar/Navbar';\nimport WebService from '../../services/WebService';\nimport Collapsible from 'react-collapsible';\nvar Modal = require('react-bootstrap-modal')\n\nexport default class FinancialReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalIsOpen: false,\n            details: null,\n            isAckPositive: null,\n            ackMessage: null,\n        };\n        this.user = JSON.parse(localStorage.getItem(AppConstants.USER_DETAILS));\n    }\n\n    componentDidMount() {\n        this.setState({ details: this.props.location.state.details });\n    }\n\n    renderAcknowledgement() {\n        if (this.state.ackMessage) {\n            return (\n                <div class=\"alert\" className={this.state.isAckPositive ? 'alert-success' : 'alert-danger'} role=\"alert\">\n                    {this.state.ackMessage}\n                </div>\n            );\n        }\n    }\n\n    render() {\n        let redirectVar = null;\n        if (!localStorage.getItem(AppConstants.AUTH_TOKEN)) {\n            redirectVar = <Redirect to=\"/\" />\n        }\n        return (\n            <div className=\"container report\">\n                {redirectVar}\n                <Navbar></Navbar>\n                <div className=\"row create-row\">\n                    {this.renderAcknowledgement()}\n                </div>\n                <div className=\"row\">\n                    {this.state.details ? this.renderDetails() : null}\n                </div>\n                <div className=\"row stats\">\n                    <div className=\"col-md-6\" style={{ borderRight: \"2px solid #cccccc\" }}>\n                        {this.state.details ? this.renderTeams() : null}\n                    </div>\n                    <div className=\"col-md-5\">\n                        {this.state.details ? this.renderExpense() : null}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderDetails() {\n        return (\n            <div class=\"container rajat_container\">\n                <div class=\"rajat_hackathon_detail_view_heading_div\">\n                    <h2>{this.state.details.eventName + \" Financial Report\"}</h2>\n                </div>\n                <div class=\"rajat_hackathon_detail_view_details_div\">\n                    <div class=\"row\" style={{ textAlign: 'center' }}>\n                        <div class=\"col-sm-3\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">Revenue From Registration: </span>{'$' + this.state.details.revenueFromRegistration}</p>\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">Revenue From Sponsors: </span>{'$' + this.state.details.revenueFromSponsor}</p>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">Total Expense: </span>{'$' + this.state.details.totalExpenses}</p>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">Amount Unpaid: </span>{'$' + this.state.details.amountUnpaid}</p>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <p><span class=\"rajat_hackathon_detail_heading\">Profit: </span>{'$' + this.state.details.profit}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderTeams() {\n        let views = []\n        this.state.details.teams.map((team, index) => {\n            views.push(\n                <Collapsible trigger={\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", marginRight: \"20%\", alignItems: \"center\" }}>\n                        <h4>{team.teamName}</h4>\n                        <h4 style={team.allPaid ? { color: \"gold\" } : { color: \"red\", marginRight: \"10px\" }}>{team.allPaid ? \"Payment Complete\" : \"Payment Pending\"}</h4>\n                    </div>\n                }>\n                    {this.renderTeamMeberPayment(team)}\n                </Collapsible>\n            )\n        });\n        return (\n            <div>\n                <h2>{'Team Payments'}</h2>\n                <br />\n                {views}\n            </div>\n        );\n    }\n\n    renderExpense() {\n        return (\n            <div>\n                <h2>{'Expenses'}</h2>\n                <br />\n                <table class=\"table table-bordered \">\n                    <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Description</th>\n                            <th>When</th>\n                            <th>Amount</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.details.expenses.map((expense, index) => {\n                                return (\n                                    <tr key={index}>\n                                        <td>{expense.title}</td>\n                                        <td>{expense.description}</td>\n                                        <td>{this.formatDate(new Date(expense.timeOfExpense))}</td>\n                                        <td>{'$' + expense.amount}</td>\n                                    </tr>\n                                );\n                            })\n\n                        }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    renderTeamMeberPayment(team) {\n        return (\n            <table class=\"table table-bordered \">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Amount</th>\n                        <th>When</th>\n                        <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        team.teamMembers.map((member, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td>{member.email}</td>\n                                    <td>{ member.paid ? '$' + member.amountPaid : \"---\"}</td>\n                                    <td>{member.paid ? this.formatDate(new Date(member.timeOfPayment)) : \"---\"}</td>\n                                    <td>{member.paid ? \"Paid\" : \"Unpaid\"}</td>\n                                </tr>\n                            );\n                        })\n\n                    }\n                </tbody>\n            </table>\n        );\n    }\n\n    formatDate(date) {\n        var hours = date.getHours();\n        var minutes = date.getMinutes();\n        var ampm = hours >= 12 ? 'PM' : 'AM';\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n        minutes = minutes < 10 ? '0'+minutes : minutes;\n        var strTime = hours + ':' + minutes + ' ' + ampm;\n        return date.getMonth()+1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \"  \" + strTime;\n      }\n}\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Home from '../screens/Home/Home';\nimport Dashboard from '../screens/Dashboard/Dashboard';\nimport MyProfile from '../screens/MyProfile/MyProfile';\nimport MyOrganization from '../screens/MyOrganization/MyOrganization';\nimport CreateHackathon from '../screens/CreateHackathon/CreateHackathon';\nimport Payment from '../screens/Payment/Payment';\nimport HackathonDetail from '../screens/HackathonDetail/HackathonDetail';\nimport MyJudgement from '../screens/MyJudgement/MyJudgement';\nimport LeaderBoard from '../screens/LeaderBoard/LeaderBoard';\nimport FinancialReport from '../screens/FinancialReport/FinancialReport';\n//Create a Main Component\nclass Main extends Component {\n    render() {\n        return (\n            <div>\n                {/*Render Different Component based on Route*/}\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/dashboard\" component={Dashboard}/>   \n                <Route path=\"/myProfile\" component={MyProfile}/>  \n                <Route path=\"/myOrganization\" component={MyOrganization}/> \n                <Route path=\"/createHackathon\" component={CreateHackathon}/>        \n                <Route path=\"/payment\" component={Payment}/>       \n                <Route path=\"/detail\" component={HackathonDetail}/> \n                <Route path=\"/myJudgement\" component={MyJudgement}/> \n                <Route path=\"/leaderBoard\" component={LeaderBoard}/>   \n                <Route path=\"/financialReport\" component={FinancialReport}/>                \n            </div>\n        )\n    }\n}\n\n//Export The Main Component\nexport default Main;","import React, {Component} from 'react';\nimport './App.css';\nimport Main from './router/Main';\nimport { Router } from 'react-router-dom';\nimport { history } from \"./router/history\";\n\n//App Component\nclass App extends Component {\n  render() {\n    return (\n      //Use Router to route to different pages\n      <Router history={history}>\n          {/* App Component Has a Child Component called Main*/}\n          <Main/>\n      </Router>\n    );\n  }\n}\n//Export the App component so that it can be used in index.js\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}